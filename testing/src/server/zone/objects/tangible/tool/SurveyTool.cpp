/*
 *	server/zone/objects/tangible/tool/SurveyTool.cpp generated by engine3 IDL compiler 0.60
 */

#include "SurveyTool.h"

#include "server/zone/objects/scene/SceneObject.h"

#include "server/zone/Zone.h"

/*
 *	SurveyToolStub
 */

SurveyTool::SurveyTool() : ToolTangibleObject(DummyConstructorParameter::instance()) {
	_impl = new SurveyToolImplementation();
	_impl->_setStub(this);
}

SurveyTool::SurveyTool(DummyConstructorParameter* param) : ToolTangibleObject(param) {
}

SurveyTool::~SurveyTool() {
}


TransactionalObject* SurveyTool::clone() {
	SurveyTool* objectCopy = new SurveyTool(DummyConstructorParameter::instance());
	objectCopy->_impl = new SurveyToolImplementation(DummyConstructorParameter::instance());
	*((SurveyToolImplementation*) objectCopy->_impl) = *((SurveyToolImplementation*) _impl);
	objectCopy->_impl->_setStub(objectCopy);
	return (TransactionalObject*) objectCopy;
}


void SurveyTool::initializeTransientMembers() {
	if (_impl == NULL) {
		if (!deployed)
			throw ObjectNotDeployedException(this);

		DistributedMethod method(this, 6);

		method.executeWithVoidReturn();
	} else
		((SurveyToolImplementation*) _impl)->initializeTransientMembers();
}

/*
 *	SurveyToolImplementation
 */

SurveyToolImplementation::SurveyToolImplementation(DummyConstructorParameter* param) : ToolTangibleObjectImplementation(param) {
	_initializeImplementation();
}

SurveyToolImplementation::~SurveyToolImplementation() {
}


void SurveyToolImplementation::finalize() {
}

void SurveyToolImplementation::_initializeImplementation() {
	_setClassHelper(SurveyToolHelper::instance());

	_serializationHelperMethod();
}

void SurveyToolImplementation::_setStub(DistributedObjectStub* stub) {
	_this = (SurveyTool*) stub;
	ToolTangibleObjectImplementation::_setStub(stub);
}

DistributedObjectStub* SurveyToolImplementation::_getStub() {
	return _this;
}

SurveyToolImplementation::operator const SurveyTool*() {
	return _this;
}

void SurveyToolImplementation::lock(bool doLock) {
	_this->lock(doLock);
}

void SurveyToolImplementation::lock(ManagedObject* obj) {
	_this->lock(obj);
}

void SurveyToolImplementation::rlock(bool doLock) {
	_this->rlock(doLock);
}

void SurveyToolImplementation::wlock(bool doLock) {
	_this->wlock(doLock);
}

void SurveyToolImplementation::wlock(ManagedObject* obj) {
	_this->wlock(obj);
}

void SurveyToolImplementation::unlock(bool doLock) {
	_this->unlock(doLock);
}

void SurveyToolImplementation::runlock(bool doLock) {
	_this->runlock(doLock);
}

void SurveyToolImplementation::_serializationHelperMethod() {
	ToolTangibleObjectImplementation::_serializationHelperMethod();

	_setClassName("SurveyTool");

}

SurveyToolImplementation::SurveyToolImplementation() {
	_initializeImplementation();
	// server/zone/objects/tangible/tool/SurveyTool.idl(54):  		Logger.setLoggingName("SurveyTool");
	Logger::setLoggingName("SurveyTool");
}

void SurveyToolImplementation::initializeTransientMembers() {
	// server/zone/objects/tangible/tool/SurveyTool.idl(58):  		super.initializeTransientMembers();
	ToolTangibleObjectImplementation::initializeTransientMembers();
	// server/zone/objects/tangible/tool/SurveyTool.idl(60):  		Logger.setLoggingName("SurveyTool");
	Logger::setLoggingName("SurveyTool");
}

/*
 *	SurveyToolAdapter
 */

SurveyToolAdapter::SurveyToolAdapter(SurveyToolImplementation* obj) : ToolTangibleObjectAdapter(obj) {
}

Packet* SurveyToolAdapter::invokeMethod(uint32 methid, DistributedMethod* inv) {
	Packet* resp = new MethodReturnMessage(0);

	switch (methid) {
	case 6:
		initializeTransientMembers();
		break;
	default:
		return NULL;
	}

	return resp;
}

void SurveyToolAdapter::initializeTransientMembers() {
	((SurveyToolImplementation*) impl)->initializeTransientMembers();
}

/*
 *	SurveyToolHelper
 */

SurveyToolHelper* SurveyToolHelper::staticInitializer = SurveyToolHelper::instance();

SurveyToolHelper::SurveyToolHelper() {
	className = "SurveyTool";

	DistributedObjectBroker::instance()->registerClass(className, this);
}

void SurveyToolHelper::finalizeHelper() {
	SurveyToolHelper::finalize();
}

DistributedObject* SurveyToolHelper::instantiateObject() {
	return new SurveyTool(DummyConstructorParameter::instance());
}

DistributedObjectServant* SurveyToolHelper::instantiateServant() {
	return new SurveyToolImplementation(DummyConstructorParameter::instance());
}

DistributedObjectAdapter* SurveyToolHelper::createAdapter(DistributedObjectStub* obj) {
	DistributedObjectAdapter* adapter = new SurveyToolAdapter((SurveyToolImplementation*) obj->_getImplementation());

	obj->_setClassName(className);
	obj->_setClassHelper(this);

	adapter->setStub(obj);

	return adapter;
}

