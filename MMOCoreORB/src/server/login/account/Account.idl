package server.login.account;

import engine.core.ManagedObject;
import engine.log.Logger;
import server.login.account.AccountManager;
import server.zone.ZoneClientSession;
import system.util.VectorMap;
import system.lang.Time;
import system.lang.System;
include server.login.objects.CharacterList;


class Account extends ManagedObject implements Logger {

	protected transient AccountManager accountManager;
	
	protected transient boolean active;
	
	protected transient string username;
	
	protected transient string salt;
	
	protected transient unsigned int accountID;
	protected transient unsigned int stationID;
	protected transient unsigned int adminLevel;
	protected transient unsigned int created;
	
	protected transient unsigned int banExpires;
	protected transient string banReason;
	
	protected transient CharacterList characterList;
	
	public native Account(AccountManager accManage);
		
	public void setActive(boolean act) {
		active = act;
	}
	
	public void setAccountID(unsigned int accountid) {
		accountID = accountid;
	}
	
	public void setStationID(unsigned int stationid) {
		stationID = stationid;
	}
	
	public void setAdminLevel(unsigned int adminlvl) {
		adminLevel = adminlvl;
	}
	
	public void setUsername(final string usern) {
		username = usern;
	}
	
	public void setBanExpires(unsigned int expires) {
		banExpires = expires;
	}
	
	public void setBanReason(final string reason) {
		banReason = reason;
	}
	
	public void setSalt(final string s) {
		salt = s;
	}
	
	public void setTimeCreated(unsigned int seconds) {
		created = seconds;
	}
	
	public boolean isActive() {
		return active == true;
	}
	
	public unsigned int getAccountID() {
		return accountID;
	}
	
	public unsigned int getStationID() {
		return stationID;
	}
	
	public unsigned int getAdminLevel() {
		return adminLevel;
	}
	
	public string getUsername() {
		return username;
	}
	
	public string getSalt() {
		return salt;
	}

	public unsigned int getTimeCreated() {
		return created;
	}
	
	public unsigned int getBanExpires() {
		return banExpires;
	}
	
	public string getBanReason() {
		return banReason;
	}
	
	public native boolean isBanned();

	@local
	public native CharacterList getCharacterList();
}