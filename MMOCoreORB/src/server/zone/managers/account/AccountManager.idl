package server.zone.managers.account;

import engine.core.ManagedObject;
import engine.log.Logger;
import server.zone.ZoneServer;
import system.util.VectorMap;
include server.zone.managers.account.ZoneAccount;
import server.zone.ZoneClientSession;

class AccountManager extends ManagedObject implements Logger {
	@weakReference
	private transient ZoneServer zoneServer;
	
	private int onlineCharactersPerAccount;
	
	@dereferenced
	private VectorMap<unsigned int, ZoneAccount> accountMap;
	
	public AccountManager(ZoneServer zserv) {
		Logger.setLoggingName("AccountManager");
		Logger.setLogging(false);
		Logger.setGlobalLogging(true);
		
		accountMap.setNullValue(null);
		accountMap.setNoDuplicateInsertPlan();
		
		zoneServer = zserv;
		
		onlineCharactersPerAccount = 1;
	}
	
	/**
	 * Registers the session with the account map, associating it with the account. If this is the first session for the account,
	 * then it should be added to the map.
	 * @param client The client that is being registered.
	 */
	public native void registerSession(ZoneClientSession client);
	
	/**
	 * Unregisters the session with the account map, associating it with the account. If this is the last session in the account,
	 * then he account should be dropped from the map.
	 * @param client The client that is being unregistered.
	 */
	public native void unregisterSession(ZoneClientSession client);
	
	public int getOnlineCharactersPerAccount() {
		return onlineCharactersPerAccount;
	}
	
	public void setOnlineCharactersPerAccount(int total) {
		onlineCharactersPerAccount = total;
	}
	
	public native int getTotalOnlineCharacters(unsigned int accountid);
}