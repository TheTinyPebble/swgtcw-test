/*
 *	server/zone/managers/command/CommandQueueManager.h generated by engine3 IDL compiler 0.60
 */

#ifndef COMMANDQUEUEMANAGER_H_
#define COMMANDQUEUEMANAGER_H_

#include "engine/orb/DistributedObjectBroker.h"

#include "engine/core/ManagedReference.h"

#include "server/zone/managers/command/CommandList.h"

#include "server/zone/managers/command/CommandConfigManager.h"

#include "server/zone/ZoneProcessServerImplementation.h"

#include "server/zone/objects/player/commands/QueueCommand.h"

#include "engine/core/ManagedObject.h"

#include "engine/log/Logger.h"

namespace server {
namespace zone {
namespace managers {
namespace command {

class CommandQueueManager : public ManagedObject {
public:
	CommandQueueManager(ZoneProcessServerImplementation* serv);

	void addQueueCommand(QueueCommand* command);

	QueueCommand* getQueueCommand(const String& name);

	QueueCommand* getQueueCommand(unsigned int crc);

protected:
	CommandQueueManager(DummyConstructorParameter* param);

	virtual ~CommandQueueManager();

	friend class CommandQueueManagerHelper;
};

} // namespace command
} // namespace managers
} // namespace zone
} // namespace server

using namespace server::zone::managers::command;

namespace server {
namespace zone {
namespace managers {
namespace command {

class CommandQueueManagerImplementation : public ManagedObjectImplementation, public Logger {
	ZoneProcessServerImplementation* server;

	CommandList* slashCommands;

	CommandConfigManager* configManager;

public:
	CommandQueueManagerImplementation(ZoneProcessServerImplementation* serv);

	void addQueueCommand(QueueCommand* command);

	QueueCommand* getQueueCommand(const String& name);

	QueueCommand* getQueueCommand(unsigned int crc);

	CommandQueueManager* _this;

	operator const CommandQueueManager*();

	DistributedObjectStub* _getStub();
protected:
	virtual ~CommandQueueManagerImplementation();

	void _setStub(DistributedObjectStub* stub);

	void _serializationHelperMethod();

	friend class CommandQueueManager;
};

class CommandQueueManagerAdapter : public ManagedObjectAdapter {
public:
	CommandQueueManagerAdapter(CommandQueueManagerImplementation* impl);

	Packet* invokeMethod(sys::uint32 methid, DistributedMethod* method);

};

class CommandQueueManagerHelper : public DistributedObjectClassHelper, public Singleton<CommandQueueManagerHelper> {
	static CommandQueueManagerHelper* staticInitializer;

public:
	CommandQueueManagerHelper();

	void finalizeHelper();

	DistributedObject* instantiateObject();

	DistributedObjectAdapter* createAdapter(DistributedObjectStub* obj);

	friend class Singleton<CommandQueueManagerHelper>;
};

} // namespace command
} // namespace managers
} // namespace zone
} // namespace server

using namespace server::zone::managers::command;

#endif /*COMMANDQUEUEMANAGER_H_*/
