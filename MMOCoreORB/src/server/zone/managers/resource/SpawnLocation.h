/*
 *	server/zone/managers/resource/SpawnLocation.h generated by engine3 IDL compiler 0.55
 */

#ifndef SPAWNLOCATION_H_
#define SPAWNLOCATION_H_

#include "engine/orb/DistributedObjectBroker.h"

class ResourceSpawn;

class SceneObject;

#include "../../objects/scene/SceneObject.h"

class SpawnLocation : public SceneObject {
public:
	SpawnLocation(unsigned long long oid, int inPlanet, float inX, float inY, float inRadius, float inMax, unsigned long long et, String& inPool);

	int getPlanet();

	float getX();

	float getY();

	float getRadius();

	float getMax();

	unsigned long long getExpireTime();

	String& getPool();

protected:
	SpawnLocation(DummyConstructorParameter* param);

	virtual ~SpawnLocation();

	String _return_getPool;

	friend class SpawnLocationHelper;
};

class SpawnLocationImplementation;

class SpawnLocationAdapter : public SceneObjectAdapter {
public:
	SpawnLocationAdapter(SpawnLocationImplementation* impl);

	Packet* invokeMethod(sys::uint32 methid, DistributedMethod* method);

	int getPlanet();

	float getX();

	float getY();

	float getRadius();

	float getMax();

	unsigned long long getExpireTime();

	String& getPool();

};

class SpawnLocationHelper : public DistributedObjectClassHelper, public Singleton<SpawnLocationHelper> {
	static SpawnLocationHelper* staticInitializer;

public:
	SpawnLocationHelper();

	void finalizeHelper();

	DistributedObject* instantiateObject();

	DistributedObjectAdapter* createAdapter(DistributedObjectStub* obj);

	friend class SingletonWrapper<SpawnLocationHelper>;
};

#include "../../objects/scene/SceneObjectImplementation.h"

class SpawnLocationServant : public SceneObjectImplementation {
public:
	SpawnLocation* _this;

public:
	SpawnLocationServant();
	virtual ~SpawnLocationServant();

	void _setStub(DistributedObjectStub* stub);
	DistributedObjectStub* _getStub();

};

#endif /*SPAWNLOCATION_H_*/
