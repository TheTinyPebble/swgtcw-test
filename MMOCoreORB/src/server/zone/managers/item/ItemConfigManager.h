/*
 *	server/zone/managers/item/ItemConfigManager.h generated by engine3 IDL compiler 0.55
 */

#ifndef ITEMCONFIGMANAGER_H_
#define ITEMCONFIGMANAGER_H_

#include "engine/orb/DistributedObjectBroker.h"

class ItemConfigManager : public DistributedObjectStub {
public:
	ItemConfigManager();

	bool loadConfigFile();

	bool loadConfigData();

	int getMaxAttachmentModCount();

	int getMaxWearableSocketCount();

	int getMaxWearableModCount();

	bool canRemoveAttachments();

protected:
	ItemConfigManager(DummyConstructorParameter* param);

	virtual ~ItemConfigManager();

	friend class ItemConfigManagerHelper;
};

class ItemConfigManagerImplementation;

class ItemConfigManagerAdapter : public DistributedObjectAdapter {
public:
	ItemConfigManagerAdapter(ItemConfigManagerImplementation* impl);

	Packet* invokeMethod(sys::uint32 methid, DistributedMethod* method);

	bool loadConfigFile();

	bool loadConfigData();

	int getMaxAttachmentModCount();

	int getMaxWearableSocketCount();

	int getMaxWearableModCount();

	bool canRemoveAttachments();

};

class ItemConfigManagerHelper : public DistributedObjectClassHelper, public Singleton<ItemConfigManagerHelper> {
	static ItemConfigManagerHelper* staticInitializer;

public:
	ItemConfigManagerHelper();

	void finalizeHelper();

	DistributedObject* instantiateObject();

	DistributedObjectAdapter* createAdapter(DistributedObjectStub* obj);

	friend class SingletonWrapper<ItemConfigManagerHelper>;
};

class ItemConfigManagerServant : public DistributedObjectServant {
public:
	ItemConfigManager* _this;

public:
	ItemConfigManagerServant();
	virtual ~ItemConfigManagerServant();

	void _setStub(DistributedObjectStub* stub);
	DistributedObjectStub* _getStub();

};

#endif /*ITEMCONFIGMANAGER_H_*/
