/*
 *	server/zone/managers/item/ItemConfigManager.cpp generated by engine3 IDL compiler 0.55
 */

#include "ItemConfigManager.h"

#include "ItemConfigManagerImplementation.h"

/*
 *	ItemConfigManagerStub
 */

ItemConfigManager::ItemConfigManager() {
	_impl = new ItemConfigManagerImplementation();
	_impl->_setStub(this);
}

ItemConfigManager::ItemConfigManager(DummyConstructorParameter* param) {
	_impl = NULL;
}

ItemConfigManager::~ItemConfigManager() {
}

bool ItemConfigManager::loadConfigFile() {
	if (_impl == NULL) {
		if (!deployed)
			throw ObjectNotDeployedException(this);

		DistributedMethod method(this, 6);

		return method.executeWithBooleanReturn();
	} else
		return ((ItemConfigManagerImplementation*) _impl)->loadConfigFile();
}

bool ItemConfigManager::loadConfigData() {
	if (_impl == NULL) {
		if (!deployed)
			throw ObjectNotDeployedException(this);

		DistributedMethod method(this, 7);

		return method.executeWithBooleanReturn();
	} else
		return ((ItemConfigManagerImplementation*) _impl)->loadConfigData();
}

int ItemConfigManager::getMaxAttachmentModCount() {
	if (_impl == NULL) {
		if (!deployed)
			throw ObjectNotDeployedException(this);

		DistributedMethod method(this, 8);

		return method.executeWithSignedIntReturn();
	} else
		return ((ItemConfigManagerImplementation*) _impl)->getMaxAttachmentModCount();
}

int ItemConfigManager::getMaxWearableSocketCount() {
	if (_impl == NULL) {
		if (!deployed)
			throw ObjectNotDeployedException(this);

		DistributedMethod method(this, 9);

		return method.executeWithSignedIntReturn();
	} else
		return ((ItemConfigManagerImplementation*) _impl)->getMaxWearableSocketCount();
}

int ItemConfigManager::getMaxWearableModCount() {
	if (_impl == NULL) {
		if (!deployed)
			throw ObjectNotDeployedException(this);

		DistributedMethod method(this, 10);

		return method.executeWithSignedIntReturn();
	} else
		return ((ItemConfigManagerImplementation*) _impl)->getMaxWearableModCount();
}

bool ItemConfigManager::canRemoveAttachments() {
	if (_impl == NULL) {
		if (!deployed)
			throw ObjectNotDeployedException(this);

		DistributedMethod method(this, 11);

		return method.executeWithBooleanReturn();
	} else
		return ((ItemConfigManagerImplementation*) _impl)->canRemoveAttachments();
}

/*
 *	ItemConfigManagerAdapter
 */

ItemConfigManagerAdapter::ItemConfigManagerAdapter(ItemConfigManagerImplementation* obj) : DistributedObjectAdapter((DistributedObjectServant*) obj) {
}

Packet* ItemConfigManagerAdapter::invokeMethod(uint32 methid, DistributedMethod* inv) {
	Packet* resp = new MethodReturnMessage(0);

	switch (methid) {
	case 6:
		resp->insertBoolean(loadConfigFile());
		break;
	case 7:
		resp->insertBoolean(loadConfigData());
		break;
	case 8:
		resp->insertSignedInt(getMaxAttachmentModCount());
		break;
	case 9:
		resp->insertSignedInt(getMaxWearableSocketCount());
		break;
	case 10:
		resp->insertSignedInt(getMaxWearableModCount());
		break;
	case 11:
		resp->insertBoolean(canRemoveAttachments());
		break;
	default:
		return NULL;
	}

	return resp;
}

bool ItemConfigManagerAdapter::loadConfigFile() {
	return ((ItemConfigManagerImplementation*) impl)->loadConfigFile();
}

bool ItemConfigManagerAdapter::loadConfigData() {
	return ((ItemConfigManagerImplementation*) impl)->loadConfigData();
}

int ItemConfigManagerAdapter::getMaxAttachmentModCount() {
	return ((ItemConfigManagerImplementation*) impl)->getMaxAttachmentModCount();
}

int ItemConfigManagerAdapter::getMaxWearableSocketCount() {
	return ((ItemConfigManagerImplementation*) impl)->getMaxWearableSocketCount();
}

int ItemConfigManagerAdapter::getMaxWearableModCount() {
	return ((ItemConfigManagerImplementation*) impl)->getMaxWearableModCount();
}

bool ItemConfigManagerAdapter::canRemoveAttachments() {
	return ((ItemConfigManagerImplementation*) impl)->canRemoveAttachments();
}

/*
 *	ItemConfigManagerHelper
 */

ItemConfigManagerHelper* ItemConfigManagerHelper::staticInitializer = ItemConfigManagerHelper::instance();

ItemConfigManagerHelper::ItemConfigManagerHelper() {
	className = "ItemConfigManager";

	DistributedObjectBroker::instance()->registerClass(className, this);
}

void ItemConfigManagerHelper::finalizeHelper() {
	ItemConfigManagerHelper::finalize();
}

DistributedObject* ItemConfigManagerHelper::instantiateObject() {
	return new ItemConfigManager(DummyConstructorParameter::instance());
}

DistributedObjectAdapter* ItemConfigManagerHelper::createAdapter(DistributedObjectStub* obj) {
	DistributedObjectAdapter* adapter = new ItemConfigManagerAdapter((ItemConfigManagerImplementation*) obj->_getImplementation());

	obj->_setClassName(className);
	obj->_setClassHelper(this);

	adapter->setStub(obj);

	return adapter;
}

/*
 *	ItemConfigManagerServant
 */

ItemConfigManagerServant::ItemConfigManagerServant() {
	_classHelper = ItemConfigManagerHelper::instance();
}

ItemConfigManagerServant::~ItemConfigManagerServant() {
}

void ItemConfigManagerServant::_setStub(DistributedObjectStub* stub) {
	_this = (ItemConfigManager*) stub;
}

DistributedObjectStub* ItemConfigManagerServant::_getStub() {
	return _this;
}

