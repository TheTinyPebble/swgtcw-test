/*
 *	server/zone/managers/objectcontroller/ObjectController.cpp generated by engine3 IDL compiler 0.60
 */

#include "ObjectController.h"

#include "server/zone/managers/objectcontroller/command/CommandQueueManager.h"

#include "server/zone/ZoneServer.h"

#include "server/zone/ZoneProcessServerImplementation.h"

/*
 *	ObjectControllerStub
 */

ObjectController::ObjectController(ZoneProcessServerImplementation* server) : ManagedObject(DummyConstructorParameter::instance()) {
	_impl = new ObjectControllerImplementation(server);
	_impl->_setStub(this);

	((ObjectControllerImplementation*) _impl)->_serializationHelperMethod();
}

ObjectController::ObjectController(DummyConstructorParameter* param) : ManagedObject(param) {
}

ObjectController::~ObjectController() {
}

CommandQueueManager* ObjectController::getCommandQueueManager() {
	if (_impl == NULL) {
		if (!deployed)
			throw ObjectNotDeployedException(this);

		DistributedMethod method(this, 6);

		return (CommandQueueManager*) method.executeWithObjectReturn();
	} else
		return ((ObjectControllerImplementation*) _impl)->getCommandQueueManager();
}

/*
 *	ObjectControllerImplementation
 */

ObjectControllerImplementation::~ObjectControllerImplementation() {
}

void ObjectControllerImplementation::_setStub(DistributedObjectStub* stub) {
	_this = (ObjectController*) stub;
	ManagedObjectImplementation::_setStub(stub);
}

DistributedObjectStub* ObjectControllerImplementation::_getStub() {
	return _this;
}

ObjectControllerImplementation::operator const ObjectController*() {
	return _this;
}

void ObjectControllerImplementation::_serializationHelperMethod() {
	ManagedObjectImplementation::_serializationHelperMethod();

	addSerializableVariable("commandQueueManager", commandQueueManager);
}

CommandQueueManager* ObjectControllerImplementation::getCommandQueueManager() {
	// server/zone/managers/objectcontroller/ObjectController.idl(61):  return commandQueueManager;
	return commandQueueManager;
}

/*
 *	ObjectControllerAdapter
 */

ObjectControllerAdapter::ObjectControllerAdapter(ObjectControllerImplementation* obj) : ManagedObjectAdapter(obj) {
}

Packet* ObjectControllerAdapter::invokeMethod(uint32 methid, DistributedMethod* inv) {
	Packet* resp = new MethodReturnMessage(0);

	switch (methid) {
	case 6:
		resp->insertLong(getCommandQueueManager()->_getObjectID());
		break;
	default:
		return NULL;
	}

	return resp;
}

CommandQueueManager* ObjectControllerAdapter::getCommandQueueManager() {
	return ((ObjectControllerImplementation*) impl)->getCommandQueueManager();
}

/*
 *	ObjectControllerHelper
 */

ObjectControllerHelper* ObjectControllerHelper::staticInitializer = ObjectControllerHelper::instance();

ObjectControllerHelper::ObjectControllerHelper() {
	className = "ObjectController";

	DistributedObjectBroker::instance()->registerClass(className, this);
}

void ObjectControllerHelper::finalizeHelper() {
	ObjectControllerHelper::finalize();
}

DistributedObject* ObjectControllerHelper::instantiateObject() {
	return new ObjectController(DummyConstructorParameter::instance());
}

DistributedObjectAdapter* ObjectControllerHelper::createAdapter(DistributedObjectStub* obj) {
	DistributedObjectAdapter* adapter = new ObjectControllerAdapter((ObjectControllerImplementation*) obj->_getImplementation());

	obj->_setClassName(className);
	obj->_setClassHelper(this);

	adapter->setStub(obj);

	return adapter;
}

