/*
 *	server/zone/managers/objectcontroller/command/CommandQueueManager.cpp generated by engine3 IDL compiler 0.60
 */

#include "CommandQueueManager.h"

/*
 *	CommandQueueManagerStub
 */

CommandQueueManager::CommandQueueManager(ZoneProcessServerImplementation* serv) : ManagedObject(DummyConstructorParameter::instance()) {
	_impl = new CommandQueueManagerImplementation(serv);
	_impl->_setStub(this);

	((CommandQueueManagerImplementation*) _impl)->_serializationHelperMethod();
}

CommandQueueManager::CommandQueueManager(DummyConstructorParameter* param) : ManagedObject(param) {
}

CommandQueueManager::~CommandQueueManager() {
}

void CommandQueueManager::addQueueCommand(QueueCommand* command) {
	if (_impl == NULL) {
		throw ObjectNotLocalException(this);

	} else
		((CommandQueueManagerImplementation*) _impl)->addQueueCommand(command);
}

QueueCommand* CommandQueueManager::getQueueCommand(const String& name) {
	if (_impl == NULL) {
		throw ObjectNotLocalException(this);

	} else
		return ((CommandQueueManagerImplementation*) _impl)->getQueueCommand(name);
}

QueueCommand* CommandQueueManager::getQueueCommand(unsigned int crc) {
	if (_impl == NULL) {
		throw ObjectNotLocalException(this);

	} else
		return ((CommandQueueManagerImplementation*) _impl)->getQueueCommand(crc);
}

/*
 *	CommandQueueManagerImplementation
 */

CommandQueueManagerImplementation::~CommandQueueManagerImplementation() {
}

void CommandQueueManagerImplementation::_setStub(DistributedObjectStub* stub) {
	_this = (CommandQueueManager*) stub;
	ManagedObjectImplementation::_setStub(stub);
}

DistributedObjectStub* CommandQueueManagerImplementation::_getStub() {
	return _this;
}

CommandQueueManagerImplementation::operator const CommandQueueManager*() {
	return _this;
}

void CommandQueueManagerImplementation::_serializationHelperMethod() {
	ManagedObjectImplementation::_serializationHelperMethod();

}

/*
 *	CommandQueueManagerAdapter
 */

CommandQueueManagerAdapter::CommandQueueManagerAdapter(CommandQueueManagerImplementation* obj) : ManagedObjectAdapter(obj) {
}

Packet* CommandQueueManagerAdapter::invokeMethod(uint32 methid, DistributedMethod* inv) {
	Packet* resp = new MethodReturnMessage(0);

	switch (methid) {
	default:
		return NULL;
	}

	return resp;
}

/*
 *	CommandQueueManagerHelper
 */

CommandQueueManagerHelper* CommandQueueManagerHelper::staticInitializer = CommandQueueManagerHelper::instance();

CommandQueueManagerHelper::CommandQueueManagerHelper() {
	className = "CommandQueueManager";

	DistributedObjectBroker::instance()->registerClass(className, this);
}

void CommandQueueManagerHelper::finalizeHelper() {
	CommandQueueManagerHelper::finalize();
}

DistributedObject* CommandQueueManagerHelper::instantiateObject() {
	return new CommandQueueManager(DummyConstructorParameter::instance());
}

DistributedObjectAdapter* CommandQueueManagerHelper::createAdapter(DistributedObjectStub* obj) {
	DistributedObjectAdapter* adapter = new CommandQueueManagerAdapter((CommandQueueManagerImplementation*) obj->_getImplementation());

	obj->_setClassName(className);
	obj->_setClassHelper(this);

	adapter->setStub(obj);

	return adapter;
}

