/*
 *	server/zone/objects/player/sui/resourcebox/SuiResourceBox.cpp generated by engine3 IDL compiler 0.55
 */

#include "SuiResourceBox.h"

#include "SuiResourceBoxImplementation.h"

#include "../listbox/SuiListBox.h"

#include "../../Player.h"

#include "../../../../managers/resource/ResourceManager.h"

/*
 *	SuiResourceBoxStub
 */

SuiResourceBox::SuiResourceBox(Player* player, ResourceManager* resourcemanager) : SuiListBox(DummyConstructorParameter::instance()) {
	_impl = new SuiResourceBoxImplementation(player, resourcemanager);
	_impl->_setStub(this);
}

SuiResourceBox::SuiResourceBox(DummyConstructorParameter* param) : SuiListBox(param) {
}

SuiResourceBox::~SuiResourceBox() {
}

BaseMessage* SuiResourceBox::generateMessage() {
	if (_impl == NULL) {
		if (!deployed)
			throw ObjectNotDeployedException(this);

		DistributedMethod method(this, 6);

		return (BaseMessage*) method.executeWithObjectReturn();
	} else
		return ((SuiResourceBoxImplementation*) _impl)->generateMessage();
}

void SuiResourceBox::onSelect(unsigned int menuchoice) {
	if (_impl == NULL) {
		if (!deployed)
			throw ObjectNotDeployedException(this);

		DistributedMethod method(this, 7);
		method.addUnsignedIntParameter(menuchoice);

		method.executeWithVoidReturn();
	} else
		((SuiResourceBoxImplementation*) _impl)->onSelect(menuchoice);
}

void SuiResourceBox::nextStage() {
	if (_impl == NULL) {
		if (!deployed)
			throw ObjectNotDeployedException(this);

		DistributedMethod method(this, 8);

		method.executeWithVoidReturn();
	} else
		((SuiResourceBoxImplementation*) _impl)->nextStage();
}

void SuiResourceBox::previousStage() {
	if (_impl == NULL) {
		if (!deployed)
			throw ObjectNotDeployedException(this);

		DistributedMethod method(this, 9);

		method.executeWithVoidReturn();
	} else
		((SuiResourceBoxImplementation*) _impl)->previousStage();
}

void SuiResourceBox::setStage(const String& value) {
	if (_impl == NULL) {
		if (!deployed)
			throw ObjectNotDeployedException(this);

		DistributedMethod method(this, 10);
		method.addAsciiParameter(value);

		method.executeWithVoidReturn();
	} else
		((SuiResourceBoxImplementation*) _impl)->setStage(value);
}

void SuiResourceBox::setResourceManager(ResourceManager* resourcemananger) {
	if (_impl == NULL) {
		if (!deployed)
			throw ObjectNotDeployedException(this);

		DistributedMethod method(this, 11);
		method.addObjectParameter(resourcemananger);

		method.executeWithVoidReturn();
	} else
		((SuiResourceBoxImplementation*) _impl)->setResourceManager(resourcemananger);
}

String& SuiResourceBox::getStage() {
	if (_impl == NULL) {
		if (!deployed)
			throw ObjectNotDeployedException(this);

		DistributedMethod method(this, 12);

		method.executeWithAsciiReturn(_return_getStage);
		return _return_getStage;
	} else
		return ((SuiResourceBoxImplementation*) _impl)->getStage();
}

ResourceManager* SuiResourceBox::getResourceManager() {
	if (_impl == NULL) {
		if (!deployed)
			throw ObjectNotDeployedException(this);

		DistributedMethod method(this, 13);

		return (ResourceManager*) method.executeWithObjectReturn();
	} else
		return ((SuiResourceBoxImplementation*) _impl)->getResourceManager();
}

/*
 *	SuiResourceBoxAdapter
 */

SuiResourceBoxAdapter::SuiResourceBoxAdapter(SuiResourceBoxImplementation* obj) : SuiListBoxAdapter(obj) {
}

Packet* SuiResourceBoxAdapter::invokeMethod(uint32 methid, DistributedMethod* inv) {
	Packet* resp = new MethodReturnMessage(0);

	switch (methid) {
	case 6:
		resp->insertLong(generateMessage()->_getObjectID());
		break;
	case 7:
		onSelect(inv->getUnsignedIntParameter());
		break;
	case 8:
		nextStage();
		break;
	case 9:
		previousStage();
		break;
	case 10:
		setStage(inv->getAsciiParameter(_param0_setStage__String_));
		break;
	case 11:
		setResourceManager((ResourceManager*) inv->getObjectParameter());
		break;
	case 12:
		resp->insertAscii(getStage());
		break;
	case 13:
		resp->insertLong(getResourceManager()->_getObjectID());
		break;
	default:
		return NULL;
	}

	return resp;
}

BaseMessage* SuiResourceBoxAdapter::generateMessage() {
	return ((SuiResourceBoxImplementation*) impl)->generateMessage();
}

void SuiResourceBoxAdapter::onSelect(unsigned int menuchoice) {
	return ((SuiResourceBoxImplementation*) impl)->onSelect(menuchoice);
}

void SuiResourceBoxAdapter::nextStage() {
	return ((SuiResourceBoxImplementation*) impl)->nextStage();
}

void SuiResourceBoxAdapter::previousStage() {
	return ((SuiResourceBoxImplementation*) impl)->previousStage();
}

void SuiResourceBoxAdapter::setStage(const String& value) {
	return ((SuiResourceBoxImplementation*) impl)->setStage(value);
}

void SuiResourceBoxAdapter::setResourceManager(ResourceManager* resourcemananger) {
	return ((SuiResourceBoxImplementation*) impl)->setResourceManager(resourcemananger);
}

String& SuiResourceBoxAdapter::getStage() {
	return ((SuiResourceBoxImplementation*) impl)->getStage();
}

ResourceManager* SuiResourceBoxAdapter::getResourceManager() {
	return ((SuiResourceBoxImplementation*) impl)->getResourceManager();
}

/*
 *	SuiResourceBoxHelper
 */

SuiResourceBoxHelper* SuiResourceBoxHelper::staticInitializer = SuiResourceBoxHelper::instance();

SuiResourceBoxHelper::SuiResourceBoxHelper() {
	className = "SuiResourceBox";

	DistributedObjectBroker::instance()->registerClass(className, this);
}

void SuiResourceBoxHelper::finalizeHelper() {
	SuiResourceBoxHelper::finalize();
}

DistributedObject* SuiResourceBoxHelper::instantiateObject() {
	return new SuiResourceBox(DummyConstructorParameter::instance());
}

DistributedObjectAdapter* SuiResourceBoxHelper::createAdapter(DistributedObjectStub* obj) {
	DistributedObjectAdapter* adapter = new SuiResourceBoxAdapter((SuiResourceBoxImplementation*) obj->_getImplementation());

	obj->_setClassName(className);
	obj->_setClassHelper(this);

	adapter->setStub(obj);

	return adapter;
}

/*
 *	SuiResourceBoxServant
 */

SuiResourceBoxServant::SuiResourceBoxServant(Player* player, unsigned int suitype, unsigned int boxtype) : SuiListBoxImplementation(player, suitype, boxtype) {
	_classHelper = SuiResourceBoxHelper::instance();
}

SuiResourceBoxServant::~SuiResourceBoxServant() {
}

void SuiResourceBoxServant::_setStub(DistributedObjectStub* stub) {
	_this = (SuiResourceBox*) stub;
	SuiListBoxServant::_setStub(stub);
}

DistributedObjectStub* SuiResourceBoxServant::_getStub() {
	return _this;
}

