/*
 *	server/zone/objects/player/sui/colorpicker/SuiColorPicker.h generated by engine3 IDL compiler 0.55
 */

#ifndef SUICOLORPICKER_H_
#define SUICOLORPICKER_H_

#include "engine/orb/DistributedObjectBroker.h"

class SuiBox;

class Player;

#include "engine/service/proto/BaseMessage.h"

#include "../SuiBox.h"

class SuiColorPicker : public SuiBox {
public:
	SuiColorPicker(Player* player, unsigned long long objectId, unsigned int windowType);

	SuiColorPicker(Player* player, unsigned long long objectId, const String& var, unsigned int windowType);

	unsigned long long getObjectID();

	BaseMessage* generateMessage();

protected:
	SuiColorPicker(DummyConstructorParameter* param);

	virtual ~SuiColorPicker();

	friend class SuiColorPickerHelper;
};

class SuiColorPickerImplementation;

class SuiColorPickerAdapter : public SuiBoxAdapter {
public:
	SuiColorPickerAdapter(SuiColorPickerImplementation* impl);

	Packet* invokeMethod(sys::uint32 methid, DistributedMethod* method);

	unsigned long long getObjectID();

	BaseMessage* generateMessage();

};

class SuiColorPickerHelper : public DistributedObjectClassHelper, public Singleton<SuiColorPickerHelper> {
	static SuiColorPickerHelper* staticInitializer;

public:
	SuiColorPickerHelper();

	void finalizeHelper();

	DistributedObject* instantiateObject();

	DistributedObjectAdapter* createAdapter(DistributedObjectStub* obj);

	friend class SingletonWrapper<SuiColorPickerHelper>;
};

#include "../SuiBoxImplementation.h"

class SuiColorPickerServant : public SuiBoxImplementation {
public:
	SuiColorPicker* _this;

public:
	SuiColorPickerServant(Player* player, unsigned int windowType, unsigned int boxType);
	virtual ~SuiColorPickerServant();

	void _setStub(DistributedObjectStub* stub);
	DistributedObjectStub* _getStub();

};

#endif /*SUICOLORPICKER_H_*/
