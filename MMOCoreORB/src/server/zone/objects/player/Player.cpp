/*
 *	server/zone/objects/player/Player.cpp generated by engine3 IDL compiler 0.60
 */

#include "Player.h"

/*
 *	PlayerStub
 */

Player::Player(LuaObject* templ, SceneObject* parent) : CreatureObject(DummyConstructorParameter::instance()) {
	_impl = new PlayerImplementation(templ, parent);
	_impl->_setStub(this);
}

Player::Player(DummyConstructorParameter* param) : CreatureObject(param) {
}

Player::~Player() {
}

/*
 *	PlayerImplementation
 */

PlayerImplementation::~PlayerImplementation() {
}

void PlayerImplementation::_setStub(DistributedObjectStub* stub) {
	_this = (Player*) stub;
	CreatureObjectImplementation::_setStub(stub);
}

DistributedObjectStub* PlayerImplementation::_getStub() {
	return _this;
}

/*
 *	PlayerAdapter
 */

PlayerAdapter::PlayerAdapter(PlayerImplementation* obj) : CreatureObjectAdapter(obj) {
}

Packet* PlayerAdapter::invokeMethod(uint32 methid, DistributedMethod* inv) {
	Packet* resp = new MethodReturnMessage(0);

	switch (methid) {
	default:
		return NULL;
	}

	return resp;
}

/*
 *	PlayerHelper
 */

PlayerHelper* PlayerHelper::staticInitializer = PlayerHelper::instance();

PlayerHelper::PlayerHelper() {
	className = "Player";

	DistributedObjectBroker::instance()->registerClass(className, this);
}

void PlayerHelper::finalizeHelper() {
	PlayerHelper::finalize();
}

DistributedObject* PlayerHelper::instantiateObject() {
	return new Player(DummyConstructorParameter::instance());
}

DistributedObjectAdapter* PlayerHelper::createAdapter(DistributedObjectStub* obj) {
	DistributedObjectAdapter* adapter = new PlayerAdapter((PlayerImplementation*) obj->_getImplementation());

	obj->_setClassName(className);
	obj->_setClassHelper(this);

	adapter->setStub(obj);

	return adapter;
}

