/*
Copyright (C) 2007 <SWGEmu>

This File is part of Core3.

This program is free software; you can redistribute
it and/or modify it under the terms of the GNU Lesser
General Public License as published by the Free Software
Foundation; either version 2 of the License,
or (at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
See the GNU Lesser General Public License for
more details.

You should have received a copy of the GNU Lesser General
Public License along with this program; if not, write to
the Free Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA

Linking Engine3 statically or dynamically with other modules
is making a combined work based on Engine3.
Thus, the terms and conditions of the GNU Lesser General Public License
cover the whole combination.

In addition, as a special exception, the copyright holders of Engine3
give you permission to combine Engine3 program with free software
programs or libraries that are released under the GNU LGPL and with
code included in the standard release of Core3 under the GNU LGPL
license (or modified versions of such code, with unchanged license).
You may copy and distribute such a system following the terms of the
GNU LGPL for Engine3 and the licenses of the other code concerned,
provided that you include the source code of that other code when
and as the GNU LGPL requires distribution of source code.

Note that people who make modified versions of Engine3 are not obligated
to grant this special exception for their modified versions;
it is their choice whether to do so. The GNU Lesser General Public License
gives permission to release a modified version without this exception;
this exception also makes it possible to release a modified version
which carries forward this exception.
*/

package server.zone.objects.player;

import engine.lua.LuaObject;
import server.zone.objects.scene.SceneObject;
import server.zone.objects.intangible.IntangibleObject;
import server.zone.objects.creature.CreatureObject;

import server.zone.ZoneClientSession;

class PlayerObject extends IntangibleObject {	
	protected unsigned int characterBitmask;
	protected string title;
	
	protected unsigned int adminLevel;
	
	public static final int LFG = 1;
	public static final int NEWBIEHELPER = 2;
	public static final int ROLEPLAYER = 4;
	public static final int AFK = 0x80;
	public static final int LD = 0x100;
	public static final int FACTIONRANK = 0x200;
	public static final int ANONYMOUS = 0x80000000;
	
	public static final int CSR = 1;
	public static final int DEVELOPER = 2;
	public static final int ADMIN = 3;
	public static final int NORMAL = 4;
	public static final int QA = 8;
	public static final int EC = 16;
	public static final int CSRJR = 32;
	public static final int ECJR = 64;
	
	public PlayerObject(LuaObject templateData) {
		super(templateData);
		
		loadTemplateData(templateData);

		Logger.setLoggingName("PlayerObject");
	}
	
	@local
	public native void loadTemplateData(LuaObject templateData);
	public native void initializeTransientMembers();
	
	public native void sendBaselinesTo(SceneObject player);
	
	public unsigned int getCharacterBitmask() {
		return characterBitmask;
	}
	
	public string getTitle() {
		return title;
	}
	
	public unsigned int getAdminLevel() {
		return adminLevel;
	}
	
	public void setCharacterBitmask(unsigned int bitmask) {
		characterBitmask = bitmask;
	}
	
	public native boolean setCharacterBit(unsigned int bit, boolean notifyClient = false);
	public native boolean clearCharacterBit(unsigned int bit, boolean notifyClient = false);
	
	public void setTitle(final string characterTitle) {
		title = characterTitle;
	}
}
