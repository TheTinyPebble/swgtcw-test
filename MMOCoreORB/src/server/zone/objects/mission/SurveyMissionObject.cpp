/*
 *	server/zone/objects/mission/SurveyMissionObject.cpp generated by engine3 IDL compiler 0.60
 */

#include "SurveyMissionObject.h"

#include "server/zone/objects/scene/SceneObject.h"

#include "server/zone/objects/intangible/IntangibleObject.h"

#include "server/zone/objects/waypoint/WaypointObject.h"

#include "server/zone/Zone.h"

/*
 *	SurveyMissionObjectStub
 */

SurveyMissionObject::SurveyMissionObject() : MissionObject(DummyConstructorParameter::instance()) {
	_impl = new SurveyMissionObjectImplementation();
	_impl->_setStub(this);
}

SurveyMissionObject::SurveyMissionObject(DummyConstructorParameter* param) : MissionObject(param) {
}

SurveyMissionObject::~SurveyMissionObject() {
}


void SurveyMissionObject::initialize() {
	if (_impl == NULL) {
		if (!deployed)
			throw ObjectNotDeployedException(this);

		DistributedMethod method(this, 6);

		method.executeWithVoidReturn();
	} else
		((SurveyMissionObjectImplementation*) _impl)->initialize();
}

bool SurveyMissionObject::isSurveyMission() {
	if (_impl == NULL) {
		if (!deployed)
			throw ObjectNotDeployedException(this);

		DistributedMethod method(this, 7);

		return method.executeWithBooleanReturn();
	} else
		return ((SurveyMissionObjectImplementation*) _impl)->isSurveyMission();
}

/*
 *	SurveyMissionObjectImplementation
 */

SurveyMissionObjectImplementation::SurveyMissionObjectImplementation(DummyConstructorParameter* param) : MissionObjectImplementation(param) {
	_initializeImplementation();
}

SurveyMissionObjectImplementation::~SurveyMissionObjectImplementation() {
}


void SurveyMissionObjectImplementation::finalize() {
}

void SurveyMissionObjectImplementation::_initializeImplementation() {
	_setClassHelper(SurveyMissionObjectHelper::instance());

	_serializationHelperMethod();
}

void SurveyMissionObjectImplementation::_setStub(DistributedObjectStub* stub) {
	_this = (SurveyMissionObject*) stub;
	MissionObjectImplementation::_setStub(stub);
}

DistributedObjectStub* SurveyMissionObjectImplementation::_getStub() {
	return _this;
}

SurveyMissionObjectImplementation::operator const SurveyMissionObject*() {
	return _this;
}

void SurveyMissionObjectImplementation::lock(bool doLock) {
	_this->lock(doLock);
}

void SurveyMissionObjectImplementation::lock(ManagedObject* obj) {
	_this->lock(obj);
}

void SurveyMissionObjectImplementation::rlock(bool doLock) {
	_this->rlock(doLock);
}

void SurveyMissionObjectImplementation::wlock(bool doLock) {
	_this->wlock(doLock);
}

void SurveyMissionObjectImplementation::wlock(ManagedObject* obj) {
	_this->wlock(obj);
}

void SurveyMissionObjectImplementation::unlock(bool doLock) {
	_this->unlock(doLock);
}

void SurveyMissionObjectImplementation::runlock(bool doLock) {
	_this->runlock(doLock);
}

void SurveyMissionObjectImplementation::_serializationHelperMethod() {
	MissionObjectImplementation::_serializationHelperMethod();

	_setClassName("SurveyMissionObject");

}

SurveyMissionObjectImplementation::SurveyMissionObjectImplementation() {
	_initializeImplementation();
	// server/zone/objects/mission/SurveyMissionObject.idl(58):  		initialize();
	initialize();
	// server/zone/objects/mission/SurveyMissionObject.idl(60):  		Logger.setLoggingName("SurveyMissionObject");
	Logger::setLoggingName("SurveyMissionObject");
}

void SurveyMissionObjectImplementation::initialize() {
	// server/zone/objects/mission/SurveyMissionObject.idl(64):  		super.typeCRC = super.SURVEY;
	MissionObjectImplementation::typeCRC = MissionObjectImplementation::SURVEY;
}

bool SurveyMissionObjectImplementation::isSurveyMission() {
	// server/zone/objects/mission/SurveyMissionObject.idl(68):  		return true;
	return true;
}

/*
 *	SurveyMissionObjectAdapter
 */

SurveyMissionObjectAdapter::SurveyMissionObjectAdapter(SurveyMissionObjectImplementation* obj) : MissionObjectAdapter(obj) {
}

Packet* SurveyMissionObjectAdapter::invokeMethod(uint32 methid, DistributedMethod* inv) {
	Packet* resp = new MethodReturnMessage(0);

	switch (methid) {
	case 6:
		initialize();
		break;
	case 7:
		resp->insertBoolean(isSurveyMission());
		break;
	default:
		return NULL;
	}

	return resp;
}

void SurveyMissionObjectAdapter::initialize() {
	((SurveyMissionObjectImplementation*) impl)->initialize();
}

bool SurveyMissionObjectAdapter::isSurveyMission() {
	return ((SurveyMissionObjectImplementation*) impl)->isSurveyMission();
}

/*
 *	SurveyMissionObjectHelper
 */

SurveyMissionObjectHelper* SurveyMissionObjectHelper::staticInitializer = SurveyMissionObjectHelper::instance();

SurveyMissionObjectHelper::SurveyMissionObjectHelper() {
	className = "SurveyMissionObject";

	DistributedObjectBroker::instance()->registerClass(className, this);
}

void SurveyMissionObjectHelper::finalizeHelper() {
	SurveyMissionObjectHelper::finalize();
}

DistributedObject* SurveyMissionObjectHelper::instantiateObject() {
	return new SurveyMissionObject(DummyConstructorParameter::instance());
}

DistributedObjectServant* SurveyMissionObjectHelper::instantiateServant() {
	return new SurveyMissionObjectImplementation(DummyConstructorParameter::instance());
}

DistributedObjectAdapter* SurveyMissionObjectHelper::createAdapter(DistributedObjectStub* obj) {
	DistributedObjectAdapter* adapter = new SurveyMissionObjectAdapter((SurveyMissionObjectImplementation*) obj->_getImplementation());

	obj->_setClassName(className);
	obj->_setClassHelper(this);

	adapter->setStub(obj);

	return adapter;
}

