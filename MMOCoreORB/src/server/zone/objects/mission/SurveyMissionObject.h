/*
 *	server/zone/objects/mission/SurveyMissionObject.h generated by engine3 IDL compiler 0.60
 */

#ifndef SURVEYMISSIONOBJECT_H_
#define SURVEYMISSIONOBJECT_H_

#include "engine/orb/DistributedObjectBroker.h"

#include "engine/core/ManagedReference.h"

#include "engine/core/ManagedWeakReference.h"

namespace server {
namespace zone {
namespace objects {
namespace scene {

class SceneObject;

} // namespace scene
} // namespace objects
} // namespace zone
} // namespace server

using namespace server::zone::objects::scene;

namespace server {
namespace zone {
namespace objects {
namespace intangible {

class IntangibleObject;

} // namespace intangible
} // namespace objects
} // namespace zone
} // namespace server

using namespace server::zone::objects::intangible;

namespace server {
namespace zone {
namespace objects {
namespace waypoint {

class WaypointObject;

} // namespace waypoint
} // namespace objects
} // namespace zone
} // namespace server

using namespace server::zone::objects::waypoint;

namespace server {
namespace zone {

class Zone;

} // namespace zone
} // namespace server

using namespace server::zone;

#include "server/zone/objects/scene/variables/StringId.h"

#include "engine/lua/LuaObject.h"

namespace server {
namespace zone {
namespace objects {
namespace mission {

class SurveyMissionObject : public MissionObject {
public:
	SurveyMissionObject();

	void initialize();

	bool isSurveyMission();

protected:
	SurveyMissionObject(DummyConstructorParameter* param);

	virtual ~SurveyMissionObject();

	friend class SurveyMissionObjectHelper;
};

} // namespace mission
} // namespace objects
} // namespace zone
} // namespace server

using namespace server::zone::objects::mission;

namespace server {
namespace zone {
namespace objects {
namespace mission {

class SurveyMissionObjectImplementation : public MissionObjectImplementation {

public:
	SurveyMissionObjectImplementation();

	SurveyMissionObjectImplementation(DummyConstructorParameter* param);

	void initialize();

	bool isSurveyMission();

	SurveyMissionObject* _this;

	operator const SurveyMissionObject*();

	DistributedObjectStub* _getStub();
protected:
	virtual ~SurveyMissionObjectImplementation();

	void finalize();

	void _initializeImplementation();

	void _setStub(DistributedObjectStub* stub);

	void lock(bool doLock = true);

	void lock(ManagedObject* obj);

	void rlock(bool doLock = true);

	void wlock(bool doLock = true);

	void wlock(ManagedObject* obj);

	void unlock(bool doLock = true);

	void runlock(bool doLock = true);

	void _serializationHelperMethod();

	friend class SurveyMissionObject;
};

class SurveyMissionObjectAdapter : public MissionObjectAdapter {
public:
	SurveyMissionObjectAdapter(SurveyMissionObjectImplementation* impl);

	Packet* invokeMethod(sys::uint32 methid, DistributedMethod* method);

	void initialize();

	bool isSurveyMission();

};

class SurveyMissionObjectHelper : public DistributedObjectClassHelper, public Singleton<SurveyMissionObjectHelper> {
	static SurveyMissionObjectHelper* staticInitializer;

public:
	SurveyMissionObjectHelper();

	void finalizeHelper();

	DistributedObject* instantiateObject();

	DistributedObjectServant* instantiateServant();

	DistributedObjectAdapter* createAdapter(DistributedObjectStub* obj);

	friend class Singleton<SurveyMissionObjectHelper>;
};

} // namespace mission
} // namespace objects
} // namespace zone
} // namespace server

using namespace server::zone::objects::mission;

#endif /*SURVEYMISSIONOBJECT_H_*/
