/*
 *	server/zone/objects/static/StaticObject.h generated by engine3 IDL compiler 0.55
 */

#ifndef STATICOBJECT_H_
#define STATICOBJECT_H_

#include "engine/orb/DistributedObjectBroker.h"

class SceneObject;

class Player;

class Zone;

#include "engine/service/Message.h"

#include "../scene/SceneObject.h"

class StaticObject : public SceneObject {
public:
	StaticObject(unsigned long long oid, int type);

	void close(Player* player);

	void sendTo(Player* player, bool doClose = true);

protected:
	StaticObject(DummyConstructorParameter* param);

	virtual ~StaticObject();

	friend class StaticObjectHelper;
};

class StaticObjectImplementation;

class StaticObjectAdapter : public SceneObjectAdapter {
public:
	StaticObjectAdapter(StaticObjectImplementation* impl);

	Packet* invokeMethod(sys::uint32 methid, DistributedMethod* method);

	void close(Player* player);

	void sendTo(Player* player, bool doClose);

};

class StaticObjectHelper : public DistributedObjectClassHelper, public Singleton<StaticObjectHelper> {
	static StaticObjectHelper* staticInitializer;

public:
	StaticObjectHelper();

	void finalizeHelper();

	DistributedObject* instantiateObject();

	DistributedObjectAdapter* createAdapter(DistributedObjectStub* obj);

	friend class SingletonWrapper<StaticObjectHelper>;
};

#include "../scene/SceneObjectImplementation.h"

class StaticObjectServant : public SceneObjectImplementation {
public:
	StaticObject* _this;

public:
	StaticObjectServant(unsigned long long oid, int type);
	virtual ~StaticObjectServant();

	void _setStub(DistributedObjectStub* stub);
	DistributedObjectStub* _getStub();

};

#endif /*STATICOBJECT_H_*/
