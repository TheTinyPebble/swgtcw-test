/*
 *	server/zone/objects/tangible/Datapad.h generated by engine3 IDL compiler 0.55
 */

#ifndef DATAPAD_H_
#define DATAPAD_H_

#include "engine/orb/DistributedObjectBroker.h"

class Container;

class CreatureObject;

#include "Container.h"

class Datapad : public Container {
public:
	Datapad(CreatureObject* creature);

protected:
	Datapad(DummyConstructorParameter* param);

	virtual ~Datapad();

	friend class DatapadHelper;
};

class DatapadImplementation;

class DatapadAdapter : public ContainerAdapter {
public:
	DatapadAdapter(DatapadImplementation* impl);

	Packet* invokeMethod(sys::uint32 methid, DistributedMethod* method);

};

class DatapadHelper : public DistributedObjectClassHelper, public Singleton<DatapadHelper> {
	static DatapadHelper* staticInitializer;

public:
	DatapadHelper();

	void finalizeHelper();

	DistributedObject* instantiateObject();

	DistributedObjectAdapter* createAdapter(DistributedObjectStub* obj);

	friend class SingletonWrapper<DatapadHelper>;
};

#include "ContainerImplementation.h"

class DatapadServant : public ContainerImplementation {
public:
	Datapad* _this;

public:
	DatapadServant(unsigned long long oid);
	virtual ~DatapadServant();

	void _setStub(DistributedObjectStub* stub);
	DistributedObjectStub* _getStub();

};

#endif /*DATAPAD_H_*/
