/*
 *	server/zone/objects/tangible/appearance/HairObject.cpp generated by engine3 IDL compiler 0.55
 */

#include "HairObject.h"

#include "HairObjectImplementation.h"

#include "../../creature/CreatureObject.h"

#include "../TangibleObject.h"

/*
 *	HairObjectStub
 */

HairObject::HairObject(CreatureObject* creature, unsigned int tempCRC, const UnicodeString& n, const String& tempn, bool eqp) : TangibleObject(DummyConstructorParameter::instance()) {
	_impl = new HairObjectImplementation(creature, tempCRC, n, tempn, eqp);
	_impl->_setStub(this);
}

HairObject::HairObject(DummyConstructorParameter* param) : TangibleObject(param) {
}

HairObject::~HairObject() {
}

/*
 *	HairObjectAdapter
 */

HairObjectAdapter::HairObjectAdapter(HairObjectImplementation* obj) : TangibleObjectAdapter(obj) {
}

Packet* HairObjectAdapter::invokeMethod(uint32 methid, DistributedMethod* inv) {
	Packet* resp = new MethodReturnMessage(0);

	switch (methid) {
	default:
		return NULL;
	}

	return resp;
}

/*
 *	HairObjectHelper
 */

HairObjectHelper* HairObjectHelper::staticInitializer = HairObjectHelper::instance();

HairObjectHelper::HairObjectHelper() {
	className = "HairObject";

	DistributedObjectBroker::instance()->registerClass(className, this);
}

void HairObjectHelper::finalizeHelper() {
	HairObjectHelper::finalize();
}

DistributedObject* HairObjectHelper::instantiateObject() {
	return new HairObject(DummyConstructorParameter::instance());
}

DistributedObjectAdapter* HairObjectHelper::createAdapter(DistributedObjectStub* obj) {
	DistributedObjectAdapter* adapter = new HairObjectAdapter((HairObjectImplementation*) obj->_getImplementation());

	obj->_setClassName(className);
	obj->_setClassHelper(this);

	adapter->setStub(obj);

	return adapter;
}

/*
 *	HairObjectServant
 */

HairObjectServant::HairObjectServant(unsigned long long oid, int tp) : TangibleObjectImplementation(oid, tp) {
	_classHelper = HairObjectHelper::instance();
}

HairObjectServant::~HairObjectServant() {
}

void HairObjectServant::_setStub(DistributedObjectStub* stub) {
	_this = (HairObject*) stub;
	TangibleObjectServant::_setStub(stub);
}

DistributedObjectStub* HairObjectServant::_getStub() {
	return _this;
}

