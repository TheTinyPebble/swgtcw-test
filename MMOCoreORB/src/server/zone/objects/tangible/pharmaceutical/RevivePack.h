/*
 *	server/zone/objects/tangible/pharmaceutical/RevivePack.h generated by engine3 IDL compiler 0.55
 */

#ifndef REVIVEPACK_H_
#define REVIVEPACK_H_

#include "engine/orb/DistributedObjectBroker.h"

class SceneObject;

class CreatureObject;

class Player;

class TangibleObject;

class Pharmaceutical;

#include "Pharmaceutical.h"

class RevivePack : public Pharmaceutical {
public:
	RevivePack(unsigned long long oid, unsigned int tempCRC, const UnicodeString& n, const String& tempn);

	RevivePack(CreatureObject* creature, unsigned int tempCRC, const UnicodeString& n, const String& tempn);

	void generateAttributes(SceneObject* obj);

	void setHealthWoundHealed(float eff);

	void setHealthHealed(float eff);

	void setActionWoundHealed(float eff);

	void setActionHealed(float eff);

	void setMindWoundHealed(float eff);

	void setMindHealed(float eff);

	float getHealthWoundHealed();

	float getHealthHealed();

	float getActionWoundHealed();

	float getActionHealed();

	float getMindWoundHealed();

	float getMindHealed();

protected:
	RevivePack(DummyConstructorParameter* param);

	virtual ~RevivePack();

	friend class RevivePackHelper;
};

class RevivePackImplementation;

class RevivePackAdapter : public PharmaceuticalAdapter {
public:
	RevivePackAdapter(RevivePackImplementation* impl);

	Packet* invokeMethod(sys::uint32 methid, DistributedMethod* method);

	void generateAttributes(SceneObject* obj);

	void setHealthWoundHealed(float eff);

	void setHealthHealed(float eff);

	void setActionWoundHealed(float eff);

	void setActionHealed(float eff);

	void setMindWoundHealed(float eff);

	void setMindHealed(float eff);

	float getHealthWoundHealed();

	float getHealthHealed();

	float getActionWoundHealed();

	float getActionHealed();

	float getMindWoundHealed();

	float getMindHealed();

};

class RevivePackHelper : public DistributedObjectClassHelper, public Singleton<RevivePackHelper> {
	static RevivePackHelper* staticInitializer;

public:
	RevivePackHelper();

	void finalizeHelper();

	DistributedObject* instantiateObject();

	DistributedObjectAdapter* createAdapter(DistributedObjectStub* obj);

	friend class SingletonWrapper<RevivePackHelper>;
};

#include "PharmaceuticalImplementation.h"

class RevivePackServant : public PharmaceuticalImplementation {
public:
	RevivePack* _this;

public:
	RevivePackServant(unsigned long long oid, unsigned int tempCRC, const UnicodeString& n, const String& tempn, int mptype);
	RevivePackServant(CreatureObject* creature, unsigned int tempCRC, const UnicodeString& n, const String& tempn, int mptype);
	virtual ~RevivePackServant();

	void _setStub(DistributedObjectStub* stub);
	DistributedObjectStub* _getStub();

};

#endif /*REVIVEPACK_H_*/
