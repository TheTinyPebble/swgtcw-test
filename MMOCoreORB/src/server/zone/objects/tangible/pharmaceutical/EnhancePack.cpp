/*
 *	server/zone/objects/tangible/pharmaceutical/EnhancePack.cpp generated by engine3 IDL compiler 0.60
 */

#include "EnhancePack.h"

#include "server/zone/objects/tangible/TangibleObject.h"

#include "server/zone/objects/scene/SceneObject.h"

#include "server/zone/Zone.h"

#include "server/zone/packets/scene/AttributeListMessage.h"

#include "server/zone/packets/object/ObjectMenuResponse.h"

#include "server/zone/objects/player/PlayerCreature.h"

#include "server/zone/ZoneServer.h"

/*
 *	EnhancePackStub
 */

EnhancePack::EnhancePack() : PharmaceuticalObject(DummyConstructorParameter::instance()) {
	_impl = new EnhancePackImplementation();
	_impl->_setStub(this);
}

EnhancePack::EnhancePack(DummyConstructorParameter* param) : PharmaceuticalObject(param) {
}

EnhancePack::~EnhancePack() {
}


float EnhancePack::getEffectiveness() {
	if (_impl == NULL) {
		if (!deployed)
			throw ObjectNotDeployedException(this);

		DistributedMethod method(this, 6);

		return method.executeWithFloatReturn();
	} else
		return ((EnhancePackImplementation*) _impl)->getEffectiveness();
}

byte EnhancePack::getAttribute() {
	if (_impl == NULL) {
		if (!deployed)
			throw ObjectNotDeployedException(this);

		DistributedMethod method(this, 7);

		return method.executeWithByteReturn();
	} else
		return ((EnhancePackImplementation*) _impl)->getAttribute();
}

float EnhancePack::getDuration() {
	if (_impl == NULL) {
		if (!deployed)
			throw ObjectNotDeployedException(this);

		DistributedMethod method(this, 8);

		return method.executeWithFloatReturn();
	} else
		return ((EnhancePackImplementation*) _impl)->getDuration();
}

/*
 *	EnhancePackImplementation
 */

EnhancePackImplementation::EnhancePackImplementation(DummyConstructorParameter* param) : PharmaceuticalObjectImplementation(param) {
	_initializeImplementation();
}

EnhancePackImplementation::~EnhancePackImplementation() {
}


void EnhancePackImplementation::finalize() {
}

void EnhancePackImplementation::_initializeImplementation() {
	_setClassHelper(EnhancePackHelper::instance());

	_serializationHelperMethod();
}

void EnhancePackImplementation::_setStub(DistributedObjectStub* stub) {
	_this = (EnhancePack*) stub;
	PharmaceuticalObjectImplementation::_setStub(stub);
}

DistributedObjectStub* EnhancePackImplementation::_getStub() {
	return _this;
}

EnhancePackImplementation::operator const EnhancePack*() {
	return _this;
}

void EnhancePackImplementation::lock(bool doLock) {
	_this->lock(doLock);
}

void EnhancePackImplementation::lock(ManagedObject* obj) {
	_this->lock(obj);
}

void EnhancePackImplementation::rlock(bool doLock) {
	_this->rlock(doLock);
}

void EnhancePackImplementation::wlock(bool doLock) {
	_this->wlock(doLock);
}

void EnhancePackImplementation::wlock(ManagedObject* obj) {
	_this->wlock(obj);
}

void EnhancePackImplementation::unlock(bool doLock) {
	_this->unlock(doLock);
}

void EnhancePackImplementation::runlock(bool doLock) {
	_this->runlock(doLock);
}

void EnhancePackImplementation::_serializationHelperMethod() {
	PharmaceuticalObjectImplementation::_serializationHelperMethod();

	_setClassName("EnhancePack");

	addSerializableVariable("effectiveness", &effectiveness);
	addSerializableVariable("duration", &duration);
	addSerializableVariable("attribute", &attribute);
}

EnhancePackImplementation::EnhancePackImplementation() {
	_initializeImplementation();
	// server/zone/objects/tangible/pharmaceutical/EnhancePack.idl(63):  		setLoggingName("EnhancePack");
	setLoggingName("EnhancePack");
	// server/zone/objects/tangible/pharmaceutical/EnhancePack.idl(65):  		effectiveness = 0;
	effectiveness = 0;
	// server/zone/objects/tangible/pharmaceutical/EnhancePack.idl(66):  		duration = 0;
	duration = 0;
	// server/zone/objects/tangible/pharmaceutical/EnhancePack.idl(67):  		attribute = 0;
	attribute = 0;
}

float EnhancePackImplementation::getEffectiveness() {
	// server/zone/objects/tangible/pharmaceutical/EnhancePack.idl(71):  		return effectiveness;
	return effectiveness;
}

byte EnhancePackImplementation::getAttribute() {
	// server/zone/objects/tangible/pharmaceutical/EnhancePack.idl(75):  		return attribute;
	return attribute;
}

float EnhancePackImplementation::getDuration() {
	// server/zone/objects/tangible/pharmaceutical/EnhancePack.idl(79):  		return duration;
	return duration;
}

/*
 *	EnhancePackAdapter
 */

EnhancePackAdapter::EnhancePackAdapter(EnhancePackImplementation* obj) : PharmaceuticalObjectAdapter(obj) {
}

Packet* EnhancePackAdapter::invokeMethod(uint32 methid, DistributedMethod* inv) {
	Packet* resp = new MethodReturnMessage(0);

	switch (methid) {
	case 6:
		resp->insertFloat(getEffectiveness());
		break;
	case 7:
		resp->insertByte(getAttribute());
		break;
	case 8:
		resp->insertFloat(getDuration());
		break;
	default:
		return NULL;
	}

	return resp;
}

float EnhancePackAdapter::getEffectiveness() {
	return ((EnhancePackImplementation*) impl)->getEffectiveness();
}

byte EnhancePackAdapter::getAttribute() {
	return ((EnhancePackImplementation*) impl)->getAttribute();
}

float EnhancePackAdapter::getDuration() {
	return ((EnhancePackImplementation*) impl)->getDuration();
}

/*
 *	EnhancePackHelper
 */

EnhancePackHelper* EnhancePackHelper::staticInitializer = EnhancePackHelper::instance();

EnhancePackHelper::EnhancePackHelper() {
	className = "EnhancePack";

	DistributedObjectBroker::instance()->registerClass(className, this);
}

void EnhancePackHelper::finalizeHelper() {
	EnhancePackHelper::finalize();
}

DistributedObject* EnhancePackHelper::instantiateObject() {
	return new EnhancePack(DummyConstructorParameter::instance());
}

DistributedObjectServant* EnhancePackHelper::instantiateServant() {
	return new EnhancePackImplementation(DummyConstructorParameter::instance());
}

DistributedObjectAdapter* EnhancePackHelper::createAdapter(DistributedObjectStub* obj) {
	DistributedObjectAdapter* adapter = new EnhancePackAdapter((EnhancePackImplementation*) obj->_getImplementation());

	obj->_setClassName(className);
	obj->_setClassHelper(this);

	adapter->setStub(obj);

	return adapter;
}

