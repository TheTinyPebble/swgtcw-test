/*
 *	server/zone/objects/tangible/deed/vehicledeed/VehicleDeed.h generated by engine3 IDL compiler 0.55
 */

#ifndef VEHICLEDEED_H_
#define VEHICLEDEED_H_

#include "engine/orb/DistributedObjectBroker.h"

class DeedObject;

class TangibleObject;

class packets;

class Player;

class CreatureObject;

class ObjectMenuResponse;

#include "../DeedObject.h"

class VehicleDeed : public DeedObject {
public:
	VehicleDeed(CreatureObject* creature, int tempCRC, const UnicodeString& n, const String& tempn);

	VehicleDeed(unsigned long long oid, int tempCRC, const UnicodeString& n, const String& tempn);

	int useObject(Player* player);

	void sendRadialResponseTo(Player* player, ObjectMenuResponse* omr);

protected:
	VehicleDeed(DummyConstructorParameter* param);

	virtual ~VehicleDeed();

	friend class VehicleDeedHelper;
};

class VehicleDeedImplementation;

class VehicleDeedAdapter : public DeedObjectAdapter {
public:
	VehicleDeedAdapter(VehicleDeedImplementation* impl);

	Packet* invokeMethod(sys::uint32 methid, DistributedMethod* method);

	int useObject(Player* player);

	void sendRadialResponseTo(Player* player, ObjectMenuResponse* omr);

};

class VehicleDeedHelper : public DistributedObjectClassHelper, public Singleton<VehicleDeedHelper> {
	static VehicleDeedHelper* staticInitializer;

public:
	VehicleDeedHelper();

	void finalizeHelper();

	DistributedObject* instantiateObject();

	DistributedObjectAdapter* createAdapter(DistributedObjectStub* obj);

	friend class SingletonWrapper<VehicleDeedHelper>;
};

#include "../DeedObjectImplementation.h"

class VehicleDeedServant : public DeedObjectImplementation {
public:
	VehicleDeed* _this;

public:
	VehicleDeedServant(CreatureObject* creature, int tempCRC, const UnicodeString& n, const String& tempn, int tp);
	VehicleDeedServant(unsigned long long oid, int tempCRC, const UnicodeString& n, const String& tempn, int tp);
	virtual ~VehicleDeedServant();

	void _setStub(DistributedObjectStub* stub);
	DistributedObjectStub* _getStub();

};

#endif /*VEHICLEDEED_H_*/
