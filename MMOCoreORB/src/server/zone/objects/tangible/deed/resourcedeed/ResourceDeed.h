/*
 *	server/zone/objects/tangible/deed/resourcedeed/ResourceDeed.h generated by engine3 IDL compiler 0.55
 */

#ifndef RESOURCEDEED_H_
#define RESOURCEDEED_H_

#include "engine/orb/DistributedObjectBroker.h"

class DeedObject;

class TangibleObject;

class packets;

class Player;

class CreatureObject;

class ObjectMenuResponse;

#include "../DeedObject.h"

class ResourceDeed : public DeedObject {
public:
	ResourceDeed(CreatureObject* creature, int tempCRC, const UnicodeString& n, const String& tempn);

	ResourceDeed(unsigned long long oid, int tempCRC, const UnicodeString& n, const String& tempn);

	int useObject(Player* player);

	void sendRadialResponseTo(Player* player, ObjectMenuResponse* omr);

	void destroyDeed(Player* player);

protected:
	ResourceDeed(DummyConstructorParameter* param);

	virtual ~ResourceDeed();

	friend class ResourceDeedHelper;
};

class ResourceDeedImplementation;

class ResourceDeedAdapter : public DeedObjectAdapter {
public:
	ResourceDeedAdapter(ResourceDeedImplementation* impl);

	Packet* invokeMethod(sys::uint32 methid, DistributedMethod* method);

	int useObject(Player* player);

	void sendRadialResponseTo(Player* player, ObjectMenuResponse* omr);

	void destroyDeed(Player* player);

};

class ResourceDeedHelper : public DistributedObjectClassHelper, public Singleton<ResourceDeedHelper> {
	static ResourceDeedHelper* staticInitializer;

public:
	ResourceDeedHelper();

	void finalizeHelper();

	DistributedObject* instantiateObject();

	DistributedObjectAdapter* createAdapter(DistributedObjectStub* obj);

	friend class SingletonWrapper<ResourceDeedHelper>;
};

#include "../DeedObjectImplementation.h"

class ResourceDeedServant : public DeedObjectImplementation {
public:
	ResourceDeed* _this;

public:
	ResourceDeedServant(CreatureObject* creature, int tempCRC, const UnicodeString& n, const String& tempn, int tp);
	ResourceDeedServant(unsigned long long oid, int tempCRC, const UnicodeString& n, const String& tempn, int tp);
	virtual ~ResourceDeedServant();

	void _setStub(DistributedObjectStub* stub);
	DistributedObjectStub* _getStub();

};

#endif /*RESOURCEDEED_H_*/
