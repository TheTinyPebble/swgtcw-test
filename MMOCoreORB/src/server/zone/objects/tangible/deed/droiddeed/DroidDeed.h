/*
 *	server/zone/objects/tangible/deed/droiddeed/DroidDeed.h generated by engine3 IDL compiler 0.55
 */

#ifndef DROIDDEED_H_
#define DROIDDEED_H_

#include "engine/orb/DistributedObjectBroker.h"

class DeedObject;

class CreatureObject;

class Player;

class SceneObject;

#include "../DeedObject.h"

class DroidDeed : public DeedObject {
public:
	DroidDeed(CreatureObject* creature, unsigned int objcrc, const UnicodeString& customname, const String& stfname);

	DroidDeed(unsigned long long objid, unsigned int objcrc, const UnicodeString& customname, const String& stfname);

	int useObject(Player* player);

	SceneObject* generateObject(Player* player);

	void parseItemAttributes();

protected:
	DroidDeed(DummyConstructorParameter* param);

	virtual ~DroidDeed();

	friend class DroidDeedHelper;
};

class DroidDeedImplementation;

class DroidDeedAdapter : public DeedObjectAdapter {
public:
	DroidDeedAdapter(DroidDeedImplementation* impl);

	Packet* invokeMethod(sys::uint32 methid, DistributedMethod* method);

	int useObject(Player* player);

	SceneObject* generateObject(Player* player);

	void parseItemAttributes();

};

class DroidDeedHelper : public DistributedObjectClassHelper, public Singleton<DroidDeedHelper> {
	static DroidDeedHelper* staticInitializer;

public:
	DroidDeedHelper();

	void finalizeHelper();

	DistributedObject* instantiateObject();

	DistributedObjectAdapter* createAdapter(DistributedObjectStub* obj);

	friend class SingletonWrapper<DroidDeedHelper>;
};

#include "../DeedObjectImplementation.h"

class DroidDeedServant : public DeedObjectImplementation {
public:
	DroidDeed* _this;

public:
	DroidDeedServant(CreatureObject* creature, unsigned int objcrc, const UnicodeString& customname, const String& stfname);
	DroidDeedServant(unsigned long long objid, unsigned int objcrc, const UnicodeString& customname, const String& stfname);
	virtual ~DroidDeedServant();

	void _setStub(DistributedObjectStub* stub);
	DistributedObjectStub* _getStub();

};

#endif /*DROIDDEED_H_*/
