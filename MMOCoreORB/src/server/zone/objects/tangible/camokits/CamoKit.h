/*
 *	server/zone/objects/tangible/camokits/CamoKit.h generated by engine3 IDL compiler 0.55
 */

#ifndef CAMOKIT_H_
#define CAMOKIT_H_

#include "engine/orb/DistributedObjectBroker.h"

class SceneObject;

#include "engine/service/Message.h"

class Player;

class TangibleObject;

#include "../TangibleObject.h"

class CamoKit : public TangibleObject {
public:
	CamoKit(unsigned long long oid, unsigned int tempCRC, const UnicodeString& n, const String& tempn);

	CamoKit(Player* player, unsigned int tempCRC, const UnicodeString& n, const String& tempn);

	void useCharge(Player* player);

	int getPlanet();

	int getUsesRemaining();

	int getConcealMin();

	void setPlanet(const int tp);

	void setUsesRemaining(const int us);

	void setConcealMin(const int min);

	void remove(Player* player);

	void sendDeltas(Player* player);

	void generateAttributes(SceneObject* obj);

	void parseItemAttributes();

protected:
	CamoKit(DummyConstructorParameter* param);

	virtual ~CamoKit();

	friend class CamoKitHelper;
};

class CamoKitImplementation;

class CamoKitAdapter : public TangibleObjectAdapter {
public:
	CamoKitAdapter(CamoKitImplementation* impl);

	Packet* invokeMethod(sys::uint32 methid, DistributedMethod* method);

	void useCharge(Player* player);

	int getPlanet();

	int getUsesRemaining();

	int getConcealMin();

	void setPlanet(const int tp);

	void setUsesRemaining(const int us);

	void setConcealMin(const int min);

	void remove(Player* player);

	void sendDeltas(Player* player);

	void generateAttributes(SceneObject* obj);

	void parseItemAttributes();

};

class CamoKitHelper : public DistributedObjectClassHelper, public Singleton<CamoKitHelper> {
	static CamoKitHelper* staticInitializer;

public:
	CamoKitHelper();

	void finalizeHelper();

	DistributedObject* instantiateObject();

	DistributedObjectAdapter* createAdapter(DistributedObjectStub* obj);

	friend class SingletonWrapper<CamoKitHelper>;
};

#include "../TangibleObjectImplementation.h"

class CamoKitServant : public TangibleObjectImplementation {
public:
	CamoKit* _this;

public:
	CamoKitServant(unsigned long long oid, int tp);
	virtual ~CamoKitServant();

	void _setStub(DistributedObjectStub* stub);
	DistributedObjectStub* _getStub();

};

#endif /*CAMOKIT_H_*/
