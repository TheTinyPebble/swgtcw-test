/*
Copyright (C) 2007 <SWGEmu>
 
This File is part of Core3.
 
This program is free software; you can redistribute 
it and/or modify it under the terms of the GNU Lesser 
General Public License as published by the Free Software
Foundation; either version 2 of the License, 
or (at your option) any later version.
 
This program is distributed in the hope that it will be useful, 
but WITHOUT ANY WARRANTY; without even the implied warranty of 
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. 
See the GNU Lesser General Public License for
more details.
 
You should have received a copy of the GNU Lesser General 
Public License along with this program; if not, write to
the Free Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
 
Linking Engine3 statically or dynamically with other modules 
is making a combined work based on Engine3. 
Thus, the terms and conditions of the GNU Lesser General Public License 
cover the whole combination.
 
In addition, as a special exception, the copyright holders of Engine3 
give you permission to combine Engine3 program with free software 
programs or libraries that are released under the GNU LGPL and with 
code included in the standard release of Core3 under the GNU LGPL 
license (or modified versions of such code, with unchanged license). 
You may copy and distribute such a system following the terms of the 
GNU LGPL for Engine3 and the licenses of the other code concerned, 
provided that you include the source code of that other code when 
and as the GNU LGPL requires distribution of source code.
 
Note that people who make modified versions of Engine3 are not obligated 
to grant this special exception for their modified versions; 
it is their choice whether to do so. The GNU Lesser General Public License 
gives permission to release a modified version without this exception; 
this exception also makes it possible to release a modified version 
which carries forward this exception.
*/

package server.zone.objects.tangible.wearables;

import server.zone.objects.tangible.wearables.WearableObject;
import engine.lua.LuaObject;
import system.util.SortedVector;
import server.zone.Zone;

class ArmorObject extends WearableObject {
	protected int healthEncumbrance;
	protected int actionEncumbrance;
	protected int mindEncumbrance;
	
	protected int rating;

	protected float kinetic;
	protected float energy;
	protected float electricity;
	protected float stun;
	protected float blast;
	protected float heat;
	protected float cold;
	protected float acid;
	protected float lightSaber;

	@dereferenced
	protected SortedVector<string> specialResistsVector;
	@dereferenced
	protected SortedVector<string> vulnerabilitesVector;

	protected float specialBase;
	
	public static final int LIGHT = 0x1;
	public static final int MEDIUM = 0x2;
	public static final int HEAVY = 0x3;
	
	public ArmorObject() {		
		healthEncumbrance = 100;
		actionEncumbrance = 100;
		mindEncumbrance = 100;
		
		rating = LIGHT;

		kinetic = 0;
		energy = 0;
		electricity = 0;
		stun = 0;
		blast = 0;
		heat = 0;
		cold = 0;
		acid = 0;
		lightSaber = 0;
		
		/*super.customizationVariables.setVariable(3, 0);
		super.customizationVariables.setVariable(2, 0);
		super.customizationVariables.setVariable(1, 0);*/
		
		Logger.setLoggingName("ArmorObject");
	}
	
	public native void initializeTransientMembers();
	
	/**
	 * Fills the attribute list message options that are sent to player creature
	 * @pre { }
	 * @post { }
	 * @param msg attribute list message with the attributes
	 * @param object player creature to which the message is sent
	 */
	@local
	public native void fillAttributeList(AttributeListMessage msg, PlayerCreature object);
	
	public boolean isSpecial(final string special) {
		return specialResistsVector.contains(special);
	}
	
	public boolean isVulnerable(final string vulnerability) {
		return vulnerabilitesVector.contains(vulnerability);
	}
	
	public boolean isArmorObject() {
		return true;
	}
	
	public int getRating() {
		return rating;
	}

	public float getKinetic() {
		return kinetic;
	}

	public float getEnergy() {
		return energy;
	}

	public float getElectricity() {
		return electricity;
	}

	public float getStun() {
		return stun;
	}

	public float getBlast() {
		return blast;
	}

	public float getHeat() {
		return heat;
	}

	public float getCold() {
		return cold;
	}

	public float getAcid() {
		return acid;
	}

	public float getLightSaber() {
		return lightSaber;
	}
}
