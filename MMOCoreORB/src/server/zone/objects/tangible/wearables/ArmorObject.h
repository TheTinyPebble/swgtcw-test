/*
 *	server/zone/objects/tangible/wearables/ArmorObject.h generated by engine3 IDL compiler 0.60
 */

#ifndef ARMOROBJECT_H_
#define ARMOROBJECT_H_

#include "engine/orb/DistributedObjectBroker.h"

#include "engine/core/ManagedReference.h"

#include "server/zone/objects/tangible/wearables/WearableObject.h"

#include "engine/lua/LuaObject.h"

namespace server {
namespace zone {
namespace objects {
namespace tangible {
namespace wearables {

class ArmorObject : public WearableObject {
public:
	ArmorObject(LuaObject* templateData);

	void initializeTransientMembers();

protected:
	ArmorObject(DummyConstructorParameter* param);

	virtual ~ArmorObject();

	friend class ArmorObjectHelper;
};

} // namespace wearables
} // namespace tangible
} // namespace objects
} // namespace zone
} // namespace server

using namespace server::zone::objects::tangible::wearables;

namespace server {
namespace zone {
namespace objects {
namespace tangible {
namespace wearables {

class ArmorObjectImplementation : public WearableObjectImplementation {

public:
	ArmorObjectImplementation(LuaObject* templateData);

	ArmorObjectImplementation(DummyConstructorParameter* param);

	void initializeTransientMembers();

	ArmorObject* _this;

	operator const ArmorObject*();

	DistributedObjectStub* _getStub();
protected:
	virtual ~ArmorObjectImplementation();

	void _initializeImplementation();

	void _setStub(DistributedObjectStub* stub);

	void lock(bool doLock = true);

	void lock(ManagedObject* obj);

	void rlock(bool doLock = true);

	void wlock(bool doLock = true);

	void wlock(ManagedObject* obj);

	void unlock(bool doLock = true);

	void runlock(bool doLock = true);

	void _serializationHelperMethod();

	friend class ArmorObject;
};

class ArmorObjectAdapter : public WearableObjectAdapter {
public:
	ArmorObjectAdapter(ArmorObjectImplementation* impl);

	Packet* invokeMethod(sys::uint32 methid, DistributedMethod* method);

};

class ArmorObjectHelper : public DistributedObjectClassHelper, public Singleton<ArmorObjectHelper> {
	static ArmorObjectHelper* staticInitializer;

public:
	ArmorObjectHelper();

	void finalizeHelper();

	DistributedObject* instantiateObject();

	DistributedObjectServant* instantiateServant();

	DistributedObjectAdapter* createAdapter(DistributedObjectStub* obj);

	friend class Singleton<ArmorObjectHelper>;
};

} // namespace wearables
} // namespace tangible
} // namespace objects
} // namespace zone
} // namespace server

using namespace server::zone::objects::tangible::wearables;

#endif /*ARMOROBJECT_H_*/
