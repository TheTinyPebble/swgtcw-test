/*
 *	server/zone/objects/tangible/campkit/campsite/BasicCampSite.h generated by engine3 IDL compiler 0.55
 */

#ifndef BASICCAMPSITE_H_
#define BASICCAMPSITE_H_

#include "engine/orb/DistributedObjectBroker.h"

class CampSite;

class CampKit;

class Player;

#include "../campsite/CampSite.h"

class BasicCampSite : public CampSite {
public:
	BasicCampSite(Player* player, unsigned long long oid, CampKit* campKit);

	void spawnCampItems();

protected:
	BasicCampSite(DummyConstructorParameter* param);

	virtual ~BasicCampSite();

	friend class BasicCampSiteHelper;
};

class BasicCampSiteImplementation;

class BasicCampSiteAdapter : public CampSiteAdapter {
public:
	BasicCampSiteAdapter(BasicCampSiteImplementation* impl);

	Packet* invokeMethod(sys::uint32 methid, DistributedMethod* method);

	void spawnCampItems();

};

class BasicCampSiteHelper : public DistributedObjectClassHelper, public Singleton<BasicCampSiteHelper> {
	static BasicCampSiteHelper* staticInitializer;

public:
	BasicCampSiteHelper();

	void finalizeHelper();

	DistributedObject* instantiateObject();

	DistributedObjectAdapter* createAdapter(DistributedObjectStub* obj);

	friend class SingletonWrapper<BasicCampSiteHelper>;
};

#include "../campsite/CampSiteImplementation.h"

class BasicCampSiteServant : public CampSiteImplementation {
public:
	BasicCampSite* _this;

public:
	BasicCampSiteServant(Player* player, unsigned long long oid, CampKit* campKit);
	virtual ~BasicCampSiteServant();

	void _setStub(DistributedObjectStub* stub);
	DistributedObjectStub* _getStub();

};

#endif /*BASICCAMPSITE_H_*/
