/*
 *	server/zone/objects/tangible/campkit/campsite/MultipersonCampSite.h generated by engine3 IDL compiler 0.55
 */

#ifndef MULTIPERSONCAMPSITE_H_
#define MULTIPERSONCAMPSITE_H_

#include "engine/orb/DistributedObjectBroker.h"

class CampSite;

class CampKit;

class Player;

#include "../campsite/CampSite.h"

class MultipersonCampSite : public CampSite {
public:
	MultipersonCampSite(Player* player, unsigned long long oid, CampKit* campKit);

	void spawnCampItems();

protected:
	MultipersonCampSite(DummyConstructorParameter* param);

	virtual ~MultipersonCampSite();

	friend class MultipersonCampSiteHelper;
};

class MultipersonCampSiteImplementation;

class MultipersonCampSiteAdapter : public CampSiteAdapter {
public:
	MultipersonCampSiteAdapter(MultipersonCampSiteImplementation* impl);

	Packet* invokeMethod(sys::uint32 methid, DistributedMethod* method);

	void spawnCampItems();

};

class MultipersonCampSiteHelper : public DistributedObjectClassHelper, public Singleton<MultipersonCampSiteHelper> {
	static MultipersonCampSiteHelper* staticInitializer;

public:
	MultipersonCampSiteHelper();

	void finalizeHelper();

	DistributedObject* instantiateObject();

	DistributedObjectAdapter* createAdapter(DistributedObjectStub* obj);

	friend class SingletonWrapper<MultipersonCampSiteHelper>;
};

#include "../campsite/CampSiteImplementation.h"

class MultipersonCampSiteServant : public CampSiteImplementation {
public:
	MultipersonCampSite* _this;

public:
	MultipersonCampSiteServant(Player* player, unsigned long long oid, CampKit* campKit);
	virtual ~MultipersonCampSiteServant();

	void _setStub(DistributedObjectStub* stub);
	DistributedObjectStub* _getStub();

};

#endif /*MULTIPERSONCAMPSITE_H_*/
