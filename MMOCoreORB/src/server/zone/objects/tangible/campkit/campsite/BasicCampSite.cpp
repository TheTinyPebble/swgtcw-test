/*
 *	server/zone/objects/tangible/campkit/campsite/BasicCampSite.cpp generated by engine3 IDL compiler 0.55
 */

#include "BasicCampSite.h"

#include "BasicCampSiteImplementation.h"

#include "../campsite/CampSite.h"

#include "../CampKit.h"

#include "../../../player/Player.h"

/*
 *	BasicCampSiteStub
 */

BasicCampSite::BasicCampSite(Player* player, unsigned long long oid, CampKit* campKit) : CampSite(DummyConstructorParameter::instance()) {
	_impl = new BasicCampSiteImplementation(player, oid, campKit);
	_impl->_setStub(this);
}

BasicCampSite::BasicCampSite(DummyConstructorParameter* param) : CampSite(param) {
}

BasicCampSite::~BasicCampSite() {
}

void BasicCampSite::spawnCampItems() {
	if (_impl == NULL) {
		if (!deployed)
			throw ObjectNotDeployedException(this);

		DistributedMethod method(this, 6);

		method.executeWithVoidReturn();
	} else
		((BasicCampSiteImplementation*) _impl)->spawnCampItems();
}

/*
 *	BasicCampSiteAdapter
 */

BasicCampSiteAdapter::BasicCampSiteAdapter(BasicCampSiteImplementation* obj) : CampSiteAdapter(obj) {
}

Packet* BasicCampSiteAdapter::invokeMethod(uint32 methid, DistributedMethod* inv) {
	Packet* resp = new MethodReturnMessage(0);

	switch (methid) {
	case 6:
		spawnCampItems();
		break;
	default:
		return NULL;
	}

	return resp;
}

void BasicCampSiteAdapter::spawnCampItems() {
	return ((BasicCampSiteImplementation*) impl)->spawnCampItems();
}

/*
 *	BasicCampSiteHelper
 */

BasicCampSiteHelper* BasicCampSiteHelper::staticInitializer = BasicCampSiteHelper::instance();

BasicCampSiteHelper::BasicCampSiteHelper() {
	className = "BasicCampSite";

	DistributedObjectBroker::instance()->registerClass(className, this);
}

void BasicCampSiteHelper::finalizeHelper() {
	BasicCampSiteHelper::finalize();
}

DistributedObject* BasicCampSiteHelper::instantiateObject() {
	return new BasicCampSite(DummyConstructorParameter::instance());
}

DistributedObjectAdapter* BasicCampSiteHelper::createAdapter(DistributedObjectStub* obj) {
	DistributedObjectAdapter* adapter = new BasicCampSiteAdapter((BasicCampSiteImplementation*) obj->_getImplementation());

	obj->_setClassName(className);
	obj->_setClassHelper(this);

	adapter->setStub(obj);

	return adapter;
}

/*
 *	BasicCampSiteServant
 */

BasicCampSiteServant::BasicCampSiteServant(Player* player, unsigned long long oid, CampKit* campKit) : CampSiteImplementation(player, oid, campKit) {
	_classHelper = BasicCampSiteHelper::instance();
}

BasicCampSiteServant::~BasicCampSiteServant() {
}

void BasicCampSiteServant::_setStub(DistributedObjectStub* stub) {
	_this = (BasicCampSite*) stub;
	CampSiteServant::_setStub(stub);
}

DistributedObjectStub* BasicCampSiteServant::_getStub() {
	return _this;
}

