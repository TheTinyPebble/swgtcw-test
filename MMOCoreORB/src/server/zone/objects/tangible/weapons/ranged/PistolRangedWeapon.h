/*
 *	server/zone/objects/tangible/weapons/ranged/PistolRangedWeapon.h generated by engine3 IDL compiler 0.55
 */

#ifndef PISTOLRANGEDWEAPON_H_
#define PISTOLRANGEDWEAPON_H_

#include "engine/orb/DistributedObjectBroker.h"

class CreatureObject;

class RangedWeapon;

#include "../RangedWeapon.h"

class PistolRangedWeapon : public RangedWeapon {
public:
	PistolRangedWeapon(unsigned long long oid, unsigned int tempCRC, const UnicodeString& n, const String& tempn, bool eqp = false);

	PistolRangedWeapon(CreatureObject* creature, const String& temp, const UnicodeString& n, const String& tempn, bool eqp = false);

protected:
	PistolRangedWeapon(DummyConstructorParameter* param);

	virtual ~PistolRangedWeapon();

	friend class PistolRangedWeaponHelper;
};

class PistolRangedWeaponImplementation;

class PistolRangedWeaponAdapter : public RangedWeaponAdapter {
public:
	PistolRangedWeaponAdapter(PistolRangedWeaponImplementation* impl);

	Packet* invokeMethod(sys::uint32 methid, DistributedMethod* method);

};

class PistolRangedWeaponHelper : public DistributedObjectClassHelper, public Singleton<PistolRangedWeaponHelper> {
	static PistolRangedWeaponHelper* staticInitializer;

public:
	PistolRangedWeaponHelper();

	void finalizeHelper();

	DistributedObject* instantiateObject();

	DistributedObjectAdapter* createAdapter(DistributedObjectStub* obj);

	friend class SingletonWrapper<PistolRangedWeaponHelper>;
};

#include "../RangedWeaponImplementation.h"

class PistolRangedWeaponServant : public RangedWeaponImplementation {
public:
	PistolRangedWeapon* _this;

public:
	PistolRangedWeaponServant(unsigned long long oid, unsigned int tempCRC, const UnicodeString& n, const String& tempn, int tp, bool eqp);
	PistolRangedWeaponServant(CreatureObject* creature, const String& temp, const UnicodeString& n, const String& tempn, int tp, bool eqp);
	virtual ~PistolRangedWeaponServant();

	void _setStub(DistributedObjectStub* stub);
	DistributedObjectStub* _getStub();

};

#endif /*PISTOLRANGEDWEAPON_H_*/
