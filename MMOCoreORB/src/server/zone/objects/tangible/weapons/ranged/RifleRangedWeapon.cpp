/*
 *	server/zone/objects/tangible/weapons/ranged/RifleRangedWeapon.cpp generated by engine3 IDL compiler 0.55
 */

#include "RifleRangedWeapon.h"

#include "RifleRangedWeaponImplementation.h"

#include "../../../creature/CreatureObject.h"

#include "../RangedWeapon.h"

/*
 *	RifleRangedWeaponStub
 */

RifleRangedWeapon::RifleRangedWeapon(unsigned long long oid, unsigned int tempCRC, const UnicodeString& n, const String& tempn, bool eqp) : RangedWeapon(DummyConstructorParameter::instance()) {
	_impl = new RifleRangedWeaponImplementation(oid, tempCRC, n, tempn, eqp);
	_impl->_setStub(this);
}

RifleRangedWeapon::RifleRangedWeapon(CreatureObject* creature, const String& temp, const UnicodeString& n, const String& tempn, bool eqp) : RangedWeapon(DummyConstructorParameter::instance()) {
	_impl = new RifleRangedWeaponImplementation(creature, temp, n, tempn, eqp);
	_impl->_setStub(this);
}

RifleRangedWeapon::RifleRangedWeapon(DummyConstructorParameter* param) : RangedWeapon(param) {
}

RifleRangedWeapon::~RifleRangedWeapon() {
}

/*
 *	RifleRangedWeaponAdapter
 */

RifleRangedWeaponAdapter::RifleRangedWeaponAdapter(RifleRangedWeaponImplementation* obj) : RangedWeaponAdapter(obj) {
}

Packet* RifleRangedWeaponAdapter::invokeMethod(uint32 methid, DistributedMethod* inv) {
	Packet* resp = new MethodReturnMessage(0);

	switch (methid) {
	default:
		return NULL;
	}

	return resp;
}

/*
 *	RifleRangedWeaponHelper
 */

RifleRangedWeaponHelper* RifleRangedWeaponHelper::staticInitializer = RifleRangedWeaponHelper::instance();

RifleRangedWeaponHelper::RifleRangedWeaponHelper() {
	className = "RifleRangedWeapon";

	DistributedObjectBroker::instance()->registerClass(className, this);
}

void RifleRangedWeaponHelper::finalizeHelper() {
	RifleRangedWeaponHelper::finalize();
}

DistributedObject* RifleRangedWeaponHelper::instantiateObject() {
	return new RifleRangedWeapon(DummyConstructorParameter::instance());
}

DistributedObjectAdapter* RifleRangedWeaponHelper::createAdapter(DistributedObjectStub* obj) {
	DistributedObjectAdapter* adapter = new RifleRangedWeaponAdapter((RifleRangedWeaponImplementation*) obj->_getImplementation());

	obj->_setClassName(className);
	obj->_setClassHelper(this);

	adapter->setStub(obj);

	return adapter;
}

/*
 *	RifleRangedWeaponServant
 */

RifleRangedWeaponServant::RifleRangedWeaponServant(unsigned long long oid, unsigned int tempCRC, const UnicodeString& n, const String& tempn, int tp, bool eqp) : RangedWeaponImplementation(oid, tempCRC, n, tempn, tp, eqp) {
	_classHelper = RifleRangedWeaponHelper::instance();
}

RifleRangedWeaponServant::RifleRangedWeaponServant(CreatureObject* creature, const String& temp, const UnicodeString& n, const String& tempn, int tp, bool eqp) : RangedWeaponImplementation(creature, temp, n, tempn, tp, eqp) {
	_classHelper = RifleRangedWeaponHelper::instance();
}

RifleRangedWeaponServant::~RifleRangedWeaponServant() {
}

void RifleRangedWeaponServant::_setStub(DistributedObjectStub* stub) {
	_this = (RifleRangedWeapon*) stub;
	RangedWeaponServant::_setStub(stub);
}

DistributedObjectStub* RifleRangedWeaponServant::_getStub() {
	return _this;
}

