/*
 *	server/zone/objects/tangible/weapons/ranged/PistolRangedWeapon.cpp generated by engine3 IDL compiler 0.55
 */

#include "PistolRangedWeapon.h"

#include "PistolRangedWeaponImplementation.h"

#include "../../../creature/CreatureObject.h"

#include "../RangedWeapon.h"

/*
 *	PistolRangedWeaponStub
 */

PistolRangedWeapon::PistolRangedWeapon(unsigned long long oid, unsigned int tempCRC, const UnicodeString& n, const String& tempn, bool eqp) : RangedWeapon(DummyConstructorParameter::instance()) {
	_impl = new PistolRangedWeaponImplementation(oid, tempCRC, n, tempn, eqp);
	_impl->_setStub(this);
}

PistolRangedWeapon::PistolRangedWeapon(CreatureObject* creature, const String& temp, const UnicodeString& n, const String& tempn, bool eqp) : RangedWeapon(DummyConstructorParameter::instance()) {
	_impl = new PistolRangedWeaponImplementation(creature, temp, n, tempn, eqp);
	_impl->_setStub(this);
}

PistolRangedWeapon::PistolRangedWeapon(DummyConstructorParameter* param) : RangedWeapon(param) {
}

PistolRangedWeapon::~PistolRangedWeapon() {
}

/*
 *	PistolRangedWeaponAdapter
 */

PistolRangedWeaponAdapter::PistolRangedWeaponAdapter(PistolRangedWeaponImplementation* obj) : RangedWeaponAdapter(obj) {
}

Packet* PistolRangedWeaponAdapter::invokeMethod(uint32 methid, DistributedMethod* inv) {
	Packet* resp = new MethodReturnMessage(0);

	switch (methid) {
	default:
		return NULL;
	}

	return resp;
}

/*
 *	PistolRangedWeaponHelper
 */

PistolRangedWeaponHelper* PistolRangedWeaponHelper::staticInitializer = PistolRangedWeaponHelper::instance();

PistolRangedWeaponHelper::PistolRangedWeaponHelper() {
	className = "PistolRangedWeapon";

	DistributedObjectBroker::instance()->registerClass(className, this);
}

void PistolRangedWeaponHelper::finalizeHelper() {
	PistolRangedWeaponHelper::finalize();
}

DistributedObject* PistolRangedWeaponHelper::instantiateObject() {
	return new PistolRangedWeapon(DummyConstructorParameter::instance());
}

DistributedObjectAdapter* PistolRangedWeaponHelper::createAdapter(DistributedObjectStub* obj) {
	DistributedObjectAdapter* adapter = new PistolRangedWeaponAdapter((PistolRangedWeaponImplementation*) obj->_getImplementation());

	obj->_setClassName(className);
	obj->_setClassHelper(this);

	adapter->setStub(obj);

	return adapter;
}

/*
 *	PistolRangedWeaponServant
 */

PistolRangedWeaponServant::PistolRangedWeaponServant(unsigned long long oid, unsigned int tempCRC, const UnicodeString& n, const String& tempn, int tp, bool eqp) : RangedWeaponImplementation(oid, tempCRC, n, tempn, tp, eqp) {
	_classHelper = PistolRangedWeaponHelper::instance();
}

PistolRangedWeaponServant::PistolRangedWeaponServant(CreatureObject* creature, const String& temp, const UnicodeString& n, const String& tempn, int tp, bool eqp) : RangedWeaponImplementation(creature, temp, n, tempn, tp, eqp) {
	_classHelper = PistolRangedWeaponHelper::instance();
}

PistolRangedWeaponServant::~PistolRangedWeaponServant() {
}

void PistolRangedWeaponServant::_setStub(DistributedObjectStub* stub) {
	_this = (PistolRangedWeapon*) stub;
	RangedWeaponServant::_setStub(stub);
}

DistributedObjectStub* PistolRangedWeaponServant::_getStub() {
	return _this;
}

