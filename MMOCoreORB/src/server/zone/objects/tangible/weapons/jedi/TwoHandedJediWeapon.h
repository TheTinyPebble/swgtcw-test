/*
 *	server/zone/objects/tangible/weapons/jedi/TwoHandedJediWeapon.h generated by engine3 IDL compiler 0.55
 */

#ifndef TWOHANDEDJEDIWEAPON_H_
#define TWOHANDEDJEDIWEAPON_H_

#include "engine/orb/DistributedObjectBroker.h"

class CreatureObject;

class JediWeapon;

#include "../JediWeapon.h"

class TwoHandedJediWeapon : public JediWeapon {
public:
	TwoHandedJediWeapon(unsigned long long oid, unsigned int tempCRC, const UnicodeString& n, const String& tempn, bool eqp = false);

	TwoHandedJediWeapon(CreatureObject* creature, const String& temp, const UnicodeString& n, const String& tempn, bool eqp = false);

protected:
	TwoHandedJediWeapon(DummyConstructorParameter* param);

	virtual ~TwoHandedJediWeapon();

	friend class TwoHandedJediWeaponHelper;
};

class TwoHandedJediWeaponImplementation;

class TwoHandedJediWeaponAdapter : public JediWeaponAdapter {
public:
	TwoHandedJediWeaponAdapter(TwoHandedJediWeaponImplementation* impl);

	Packet* invokeMethod(sys::uint32 methid, DistributedMethod* method);

};

class TwoHandedJediWeaponHelper : public DistributedObjectClassHelper, public Singleton<TwoHandedJediWeaponHelper> {
	static TwoHandedJediWeaponHelper* staticInitializer;

public:
	TwoHandedJediWeaponHelper();

	void finalizeHelper();

	DistributedObject* instantiateObject();

	DistributedObjectAdapter* createAdapter(DistributedObjectStub* obj);

	friend class SingletonWrapper<TwoHandedJediWeaponHelper>;
};

#include "../JediWeaponImplementation.h"

class TwoHandedJediWeaponServant : public JediWeaponImplementation {
public:
	TwoHandedJediWeapon* _this;

public:
	TwoHandedJediWeaponServant(unsigned long long oid, unsigned int tempCRC, const UnicodeString& n, const String& tempn, int tp, bool eqp);
	TwoHandedJediWeaponServant(CreatureObject* creature, const String& temp, const UnicodeString& n, const String& tempn, int tp, bool eqp);
	virtual ~TwoHandedJediWeaponServant();

	void _setStub(DistributedObjectStub* stub);
	DistributedObjectStub* _getStub();

};

#endif /*TWOHANDEDJEDIWEAPON_H_*/
