/*
 *	server/zone/objects/tangible/weapons/melee/PolearmMeleeWeapon.cpp generated by engine3 IDL compiler 0.55
 */

#include "PolearmMeleeWeapon.h"

#include "PolearmMeleeWeaponImplementation.h"

#include "../../../creature/CreatureObject.h"

#include "../MeleeWeapon.h"

/*
 *	PolearmMeleeWeaponStub
 */

PolearmMeleeWeapon::PolearmMeleeWeapon(unsigned long long oid, unsigned int tempCRC, const UnicodeString& n, const String& tempn, bool eqp) : MeleeWeapon(DummyConstructorParameter::instance()) {
	_impl = new PolearmMeleeWeaponImplementation(oid, tempCRC, n, tempn, eqp);
	_impl->_setStub(this);
}

PolearmMeleeWeapon::PolearmMeleeWeapon(CreatureObject* creature, const String& temp, const UnicodeString& n, const String& tempn, bool eqp) : MeleeWeapon(DummyConstructorParameter::instance()) {
	_impl = new PolearmMeleeWeaponImplementation(creature, temp, n, tempn, eqp);
	_impl->_setStub(this);
}

PolearmMeleeWeapon::PolearmMeleeWeapon(DummyConstructorParameter* param) : MeleeWeapon(param) {
}

PolearmMeleeWeapon::~PolearmMeleeWeapon() {
}

/*
 *	PolearmMeleeWeaponAdapter
 */

PolearmMeleeWeaponAdapter::PolearmMeleeWeaponAdapter(PolearmMeleeWeaponImplementation* obj) : MeleeWeaponAdapter(obj) {
}

Packet* PolearmMeleeWeaponAdapter::invokeMethod(uint32 methid, DistributedMethod* inv) {
	Packet* resp = new MethodReturnMessage(0);

	switch (methid) {
	default:
		return NULL;
	}

	return resp;
}

/*
 *	PolearmMeleeWeaponHelper
 */

PolearmMeleeWeaponHelper* PolearmMeleeWeaponHelper::staticInitializer = PolearmMeleeWeaponHelper::instance();

PolearmMeleeWeaponHelper::PolearmMeleeWeaponHelper() {
	className = "PolearmMeleeWeapon";

	DistributedObjectBroker::instance()->registerClass(className, this);
}

void PolearmMeleeWeaponHelper::finalizeHelper() {
	PolearmMeleeWeaponHelper::finalize();
}

DistributedObject* PolearmMeleeWeaponHelper::instantiateObject() {
	return new PolearmMeleeWeapon(DummyConstructorParameter::instance());
}

DistributedObjectAdapter* PolearmMeleeWeaponHelper::createAdapter(DistributedObjectStub* obj) {
	DistributedObjectAdapter* adapter = new PolearmMeleeWeaponAdapter((PolearmMeleeWeaponImplementation*) obj->_getImplementation());

	obj->_setClassName(className);
	obj->_setClassHelper(this);

	adapter->setStub(obj);

	return adapter;
}

/*
 *	PolearmMeleeWeaponServant
 */

PolearmMeleeWeaponServant::PolearmMeleeWeaponServant(unsigned long long oid, unsigned int tempCRC, const UnicodeString& n, const String& tempn, int tp, bool eqp) : MeleeWeaponImplementation(oid, tempCRC, n, tempn, tp, eqp) {
	_classHelper = PolearmMeleeWeaponHelper::instance();
}

PolearmMeleeWeaponServant::PolearmMeleeWeaponServant(CreatureObject* creature, const String& temp, const UnicodeString& n, const String& tempn, int tp, bool eqp) : MeleeWeaponImplementation(creature, temp, n, tempn, tp, eqp) {
	_classHelper = PolearmMeleeWeaponHelper::instance();
}

PolearmMeleeWeaponServant::~PolearmMeleeWeaponServant() {
}

void PolearmMeleeWeaponServant::_setStub(DistributedObjectStub* stub) {
	_this = (PolearmMeleeWeapon*) stub;
	MeleeWeaponServant::_setStub(stub);
}

DistributedObjectStub* PolearmMeleeWeaponServant::_getStub() {
	return _this;
}

