/*
 *	server/zone/objects/tangible/gambling/JubileeWheel.h generated by engine3 IDL compiler 0.55
 */

#ifndef JUBILEEWHEEL_H_
#define JUBILEEWHEEL_H_

#include "engine/orb/DistributedObjectBroker.h"

class Player;

class TangibleObject;

#include "../TangibleObject.h"

class JubileeWheel : public TangibleObject {
public:
	JubileeWheel(unsigned long long objid, float x, float z, float y);

	int useObject(Player* player);

protected:
	JubileeWheel(DummyConstructorParameter* param);

	virtual ~JubileeWheel();

	friend class JubileeWheelHelper;
};

class JubileeWheelImplementation;

class JubileeWheelAdapter : public TangibleObjectAdapter {
public:
	JubileeWheelAdapter(JubileeWheelImplementation* impl);

	Packet* invokeMethod(sys::uint32 methid, DistributedMethod* method);

	int useObject(Player* player);

};

class JubileeWheelHelper : public DistributedObjectClassHelper, public Singleton<JubileeWheelHelper> {
	static JubileeWheelHelper* staticInitializer;

public:
	JubileeWheelHelper();

	void finalizeHelper();

	DistributedObject* instantiateObject();

	DistributedObjectAdapter* createAdapter(DistributedObjectStub* obj);

	friend class SingletonWrapper<JubileeWheelHelper>;
};

#include "../TangibleObjectImplementation.h"

class JubileeWheelServant : public TangibleObjectImplementation {
public:
	JubileeWheel* _this;

public:
	JubileeWheelServant(unsigned long long objid, unsigned int tempCRC, const UnicodeString& n, const String& tempname, int tp);
	virtual ~JubileeWheelServant();

	void _setStub(DistributedObjectStub* stub);
	DistributedObjectStub* _getStub();

};

#endif /*JUBILEEWHEEL_H_*/
