/*
 *	server/zone/objects/tangible/component/armor/ArmorComponent.cpp generated by engine3 IDL compiler 0.60
 */

#include "ArmorComponent.h"

#include "server/zone/objects/scene/SceneObject.h"

#include "server/zone/Zone.h"

#include "server/zone/objects/manufactureschematic/ManufactureSchematic.h"

/*
 *	ArmorComponentStub
 */

ArmorComponent::ArmorComponent() : Component(DummyConstructorParameter::instance()) {
	_impl = new ArmorComponentImplementation();
	_impl->_setStub(this);
}

ArmorComponent::ArmorComponent(DummyConstructorParameter* param) : Component(param) {
}

ArmorComponent::~ArmorComponent() {
}


void ArmorComponent::initializeTransientMembers() {
	if (_impl == NULL) {
		if (!deployed)
			throw ObjectNotDeployedException(this);

		DistributedMethod method(this, 6);

		method.executeWithVoidReturn();
	} else
		((ArmorComponentImplementation*) _impl)->initializeTransientMembers();
}

void ArmorComponent::updateCraftingValues(ManufactureSchematic* schematic) {
	if (_impl == NULL) {
		if (!deployed)
			throw ObjectNotDeployedException(this);

		DistributedMethod method(this, 7);
		method.addObjectParameter(schematic);

		method.executeWithVoidReturn();
	} else
		((ArmorComponentImplementation*) _impl)->updateCraftingValues(schematic);
}

/*
 *	ArmorComponentImplementation
 */

ArmorComponentImplementation::ArmorComponentImplementation(DummyConstructorParameter* param) : ComponentImplementation(param) {
	_initializeImplementation();
}

ArmorComponentImplementation::~ArmorComponentImplementation() {
}


void ArmorComponentImplementation::finalize() {
}

void ArmorComponentImplementation::_initializeImplementation() {
	_setClassHelper(ArmorComponentHelper::instance());

	_serializationHelperMethod();
}

void ArmorComponentImplementation::_setStub(DistributedObjectStub* stub) {
	_this = (ArmorComponent*) stub;
	ComponentImplementation::_setStub(stub);
}

DistributedObjectStub* ArmorComponentImplementation::_getStub() {
	return _this;
}

ArmorComponentImplementation::operator const ArmorComponent*() {
	return _this;
}

void ArmorComponentImplementation::lock(bool doLock) {
	_this->lock(doLock);
}

void ArmorComponentImplementation::lock(ManagedObject* obj) {
	_this->lock(obj);
}

void ArmorComponentImplementation::rlock(bool doLock) {
	_this->rlock(doLock);
}

void ArmorComponentImplementation::wlock(bool doLock) {
	_this->wlock(doLock);
}

void ArmorComponentImplementation::wlock(ManagedObject* obj) {
	_this->wlock(obj);
}

void ArmorComponentImplementation::unlock(bool doLock) {
	_this->unlock(doLock);
}

void ArmorComponentImplementation::runlock(bool doLock) {
	_this->runlock(doLock);
}

void ArmorComponentImplementation::_serializationHelperMethod() {
	ComponentImplementation::_serializationHelperMethod();

	_setClassName("ArmorComponent");

	addSerializableVariable("specialResists", &specialResists);
}

ArmorComponentImplementation::ArmorComponentImplementation() {
	_initializeImplementation();
	// server/zone/objects/tangible/component/armor/ArmorComponent.idl(58):  		Logger.setLoggingName("ArmorComponent");
	Logger::setLoggingName("ArmorComponent");
	// server/zone/objects/tangible/component/armor/ArmorComponent.idl(59):  		specialResists = 0;
	specialResists = 0;
}

/*
 *	ArmorComponentAdapter
 */

ArmorComponentAdapter::ArmorComponentAdapter(ArmorComponentImplementation* obj) : ComponentAdapter(obj) {
}

Packet* ArmorComponentAdapter::invokeMethod(uint32 methid, DistributedMethod* inv) {
	Packet* resp = new MethodReturnMessage(0);

	switch (methid) {
	case 6:
		initializeTransientMembers();
		break;
	case 7:
		updateCraftingValues((ManufactureSchematic*) inv->getObjectParameter());
		break;
	default:
		return NULL;
	}

	return resp;
}

void ArmorComponentAdapter::initializeTransientMembers() {
	((ArmorComponentImplementation*) impl)->initializeTransientMembers();
}

void ArmorComponentAdapter::updateCraftingValues(ManufactureSchematic* schematic) {
	((ArmorComponentImplementation*) impl)->updateCraftingValues(schematic);
}

/*
 *	ArmorComponentHelper
 */

ArmorComponentHelper* ArmorComponentHelper::staticInitializer = ArmorComponentHelper::instance();

ArmorComponentHelper::ArmorComponentHelper() {
	className = "ArmorComponent";

	DistributedObjectBroker::instance()->registerClass(className, this);
}

void ArmorComponentHelper::finalizeHelper() {
	ArmorComponentHelper::finalize();
}

DistributedObject* ArmorComponentHelper::instantiateObject() {
	return new ArmorComponent(DummyConstructorParameter::instance());
}

DistributedObjectServant* ArmorComponentHelper::instantiateServant() {
	return new ArmorComponentImplementation(DummyConstructorParameter::instance());
}

DistributedObjectAdapter* ArmorComponentHelper::createAdapter(DistributedObjectStub* obj) {
	DistributedObjectAdapter* adapter = new ArmorComponentAdapter((ArmorComponentImplementation*) obj->_getImplementation());

	obj->_setClassName(className);
	obj->_setClassHelper(this);

	adapter->setStub(obj);

	return adapter;
}

