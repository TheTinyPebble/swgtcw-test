/*
 *	server/zone/objects/tangible/terminal/mission/MissionTerminal.h generated by engine3 IDL compiler 0.55
 */

#ifndef MISSIONTERMINAL_H_
#define MISSIONTERMINAL_H_

#include "engine/orb/DistributedObjectBroker.h"

#include "engine/service/Message.h"

class Player;

class ShuttleCreature;

class Terminal;

#include "../Terminal.h"

class MissionTerminal : public Terminal {
public:
	MissionTerminal(unsigned long long objid, float x, float z, float y, int pId, int tmsk);

	int getPlanetId();

	int getTerminalMask();

	int useObject(Player* player);

protected:
	MissionTerminal(DummyConstructorParameter* param);

	virtual ~MissionTerminal();

	friend class MissionTerminalHelper;
};

class MissionTerminalImplementation;

class MissionTerminalAdapter : public TerminalAdapter {
public:
	MissionTerminalAdapter(MissionTerminalImplementation* impl);

	Packet* invokeMethod(sys::uint32 methid, DistributedMethod* method);

	int getPlanetId();

	int getTerminalMask();

	int useObject(Player* player);

};

class MissionTerminalHelper : public DistributedObjectClassHelper, public Singleton<MissionTerminalHelper> {
	static MissionTerminalHelper* staticInitializer;

public:
	MissionTerminalHelper();

	void finalizeHelper();

	DistributedObject* instantiateObject();

	DistributedObjectAdapter* createAdapter(DistributedObjectStub* obj);

	friend class SingletonWrapper<MissionTerminalHelper>;
};

#include "../TerminalImplementation.h"

class MissionTerminalServant : public TerminalImplementation {
public:
	MissionTerminal* _this;

public:
	MissionTerminalServant(unsigned int objCRC, unsigned long long objid, const UnicodeString& n, const String& tempn, float x, float z, float y, unsigned char terminaltype);
	virtual ~MissionTerminalServant();

	void _setStub(DistributedObjectStub* stub);
	DistributedObjectStub* _getStub();

};

#endif /*MISSIONTERMINAL_H_*/
