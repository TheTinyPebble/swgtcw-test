/*
 *	server/zone/objects/tangible/terminal/camp/CampTerminal.h generated by engine3 IDL compiler 0.55
 */

#ifndef CAMPTERMINAL_H_
#define CAMPTERMINAL_H_

#include "engine/orb/DistributedObjectBroker.h"

class CampSite;

class Terminal;

class Player;

#include "../Terminal.h"

class CampTerminal : public Terminal {
public:
	CampTerminal(CampSite* camp, unsigned long long objid, float x, float z, float y);

	int useObject(Player* player);

	CampSite* getCampSite();

protected:
	CampTerminal(DummyConstructorParameter* param);

	virtual ~CampTerminal();

	friend class CampTerminalHelper;
};

class CampTerminalImplementation;

class CampTerminalAdapter : public TerminalAdapter {
public:
	CampTerminalAdapter(CampTerminalImplementation* impl);

	Packet* invokeMethod(sys::uint32 methid, DistributedMethod* method);

	int useObject(Player* player);

	CampSite* getCampSite();

};

class CampTerminalHelper : public DistributedObjectClassHelper, public Singleton<CampTerminalHelper> {
	static CampTerminalHelper* staticInitializer;

public:
	CampTerminalHelper();

	void finalizeHelper();

	DistributedObject* instantiateObject();

	DistributedObjectAdapter* createAdapter(DistributedObjectStub* obj);

	friend class SingletonWrapper<CampTerminalHelper>;
};

#include "../TerminalImplementation.h"

class CampTerminalServant : public TerminalImplementation {
public:
	CampTerminal* _this;

public:
	CampTerminalServant(unsigned int objCRC, unsigned long long objid, const UnicodeString& n, const String& tempn, float x, float z, float y, int TerminalType);
	virtual ~CampTerminalServant();

	void _setStub(DistributedObjectStub* stub);
	DistributedObjectStub* _getStub();

};

#endif /*CAMPTERMINAL_H_*/
