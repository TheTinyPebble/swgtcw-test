/*
 *	server/zone/objects/tangible/terminal/bank/BankTerminal.cpp generated by engine3 IDL compiler 0.55
 */

#include "BankTerminal.h"

#include "BankTerminalImplementation.h"

#include "server/zone/managers/bank/BankManager.h"

#include "../Terminal.h"

#include "../../../player/Player.h"

/*
 *	BankTerminalStub
 */

BankTerminal::BankTerminal(BankManager* bankmanager, unsigned long long objid, float x, float z, float y) : Terminal(DummyConstructorParameter::instance()) {
	_impl = new BankTerminalImplementation(bankmanager, objid, x, z, y);
	_impl->_setStub(this);
}

BankTerminal::BankTerminal(DummyConstructorParameter* param) : Terminal(param) {
}

BankTerminal::~BankTerminal() {
}

int BankTerminal::useObject(Player* player) {
	if (_impl == NULL) {
		if (!deployed)
			throw ObjectNotDeployedException(this);

		DistributedMethod method(this, 6);
		method.addObjectParameter(player);

		return method.executeWithSignedIntReturn();
	} else
		return ((BankTerminalImplementation*) _impl)->useObject(player);
}

/*
 *	BankTerminalAdapter
 */

BankTerminalAdapter::BankTerminalAdapter(BankTerminalImplementation* obj) : TerminalAdapter(obj) {
}

Packet* BankTerminalAdapter::invokeMethod(uint32 methid, DistributedMethod* inv) {
	Packet* resp = new MethodReturnMessage(0);

	switch (methid) {
	case 6:
		resp->insertSignedInt(useObject((Player*) inv->getObjectParameter()));
		break;
	default:
		return NULL;
	}

	return resp;
}

int BankTerminalAdapter::useObject(Player* player) {
	return ((BankTerminalImplementation*) impl)->useObject(player);
}

/*
 *	BankTerminalHelper
 */

BankTerminalHelper* BankTerminalHelper::staticInitializer = BankTerminalHelper::instance();

BankTerminalHelper::BankTerminalHelper() {
	className = "BankTerminal";

	DistributedObjectBroker::instance()->registerClass(className, this);
}

void BankTerminalHelper::finalizeHelper() {
	BankTerminalHelper::finalize();
}

DistributedObject* BankTerminalHelper::instantiateObject() {
	return new BankTerminal(DummyConstructorParameter::instance());
}

DistributedObjectAdapter* BankTerminalHelper::createAdapter(DistributedObjectStub* obj) {
	DistributedObjectAdapter* adapter = new BankTerminalAdapter((BankTerminalImplementation*) obj->_getImplementation());

	obj->_setClassName(className);
	obj->_setClassHelper(this);

	adapter->setStub(obj);

	return adapter;
}

/*
 *	BankTerminalServant
 */

BankTerminalServant::BankTerminalServant(unsigned int objCRC, unsigned long long objid, const UnicodeString& n, const String& tempn, float x, float z, float y, unsigned char terminaltype) : TerminalImplementation(objCRC, objid, n, tempn, x, z, y, terminaltype) {
	_classHelper = BankTerminalHelper::instance();
}

BankTerminalServant::~BankTerminalServant() {
}

void BankTerminalServant::_setStub(DistributedObjectStub* stub) {
	_this = (BankTerminal*) stub;
	TerminalServant::_setStub(stub);
}

DistributedObjectStub* BankTerminalServant::_getStub() {
	return _this;
}

