/*
 *	server/zone/objects/tangible/terminal/travel/TravelTerminal.h generated by engine3 IDL compiler 0.55
 */

#ifndef TRAVELTERMINAL_H_
#define TRAVELTERMINAL_H_

#include "engine/orb/DistributedObjectBroker.h"

#include "engine/service/Message.h"

class Player;

class ShuttleCreature;

class Terminal;

#include "../Terminal.h"

class TravelTerminal : public Terminal {
public:
	TravelTerminal(ShuttleCreature* shutle, unsigned long long objid, float x, float z, float y);

	int useObject(Player* player);

protected:
	TravelTerminal(DummyConstructorParameter* param);

	virtual ~TravelTerminal();

	friend class TravelTerminalHelper;
};

class TravelTerminalImplementation;

class TravelTerminalAdapter : public TerminalAdapter {
public:
	TravelTerminalAdapter(TravelTerminalImplementation* impl);

	Packet* invokeMethod(sys::uint32 methid, DistributedMethod* method);

	int useObject(Player* player);

};

class TravelTerminalHelper : public DistributedObjectClassHelper, public Singleton<TravelTerminalHelper> {
	static TravelTerminalHelper* staticInitializer;

public:
	TravelTerminalHelper();

	void finalizeHelper();

	DistributedObject* instantiateObject();

	DistributedObjectAdapter* createAdapter(DistributedObjectStub* obj);

	friend class SingletonWrapper<TravelTerminalHelper>;
};

#include "../TerminalImplementation.h"

class TravelTerminalServant : public TerminalImplementation {
public:
	TravelTerminal* _this;

public:
	TravelTerminalServant(unsigned int objCRC, unsigned long long objid, const UnicodeString& n, const String& tempn, float x, float z, float y, unsigned char terminaltype);
	virtual ~TravelTerminalServant();

	void _setStub(DistributedObjectStub* stub);
	DistributedObjectStub* _getStub();

};

#endif /*TRAVELTERMINAL_H_*/
