/*
 *	server/zone/objects/tangible/terminal/travel/TravelTerminal.cpp generated by engine3 IDL compiler 0.55
 */

#include "TravelTerminal.h"

#include "TravelTerminalImplementation.h"

#include "../../../player/Player.h"

#include "../../../creature/shuttle/ShuttleCreature.h"

#include "../Terminal.h"

/*
 *	TravelTerminalStub
 */

TravelTerminal::TravelTerminal(ShuttleCreature* shutle, unsigned long long objid, float x, float z, float y) : Terminal(DummyConstructorParameter::instance()) {
	_impl = new TravelTerminalImplementation(shutle, objid, x, z, y);
	_impl->_setStub(this);
}

TravelTerminal::TravelTerminal(DummyConstructorParameter* param) : Terminal(param) {
}

TravelTerminal::~TravelTerminal() {
}

int TravelTerminal::useObject(Player* player) {
	if (_impl == NULL) {
		if (!deployed)
			throw ObjectNotDeployedException(this);

		DistributedMethod method(this, 6);
		method.addObjectParameter(player);

		return method.executeWithSignedIntReturn();
	} else
		return ((TravelTerminalImplementation*) _impl)->useObject(player);
}

/*
 *	TravelTerminalAdapter
 */

TravelTerminalAdapter::TravelTerminalAdapter(TravelTerminalImplementation* obj) : TerminalAdapter(obj) {
}

Packet* TravelTerminalAdapter::invokeMethod(uint32 methid, DistributedMethod* inv) {
	Packet* resp = new MethodReturnMessage(0);

	switch (methid) {
	case 6:
		resp->insertSignedInt(useObject((Player*) inv->getObjectParameter()));
		break;
	default:
		return NULL;
	}

	return resp;
}

int TravelTerminalAdapter::useObject(Player* player) {
	return ((TravelTerminalImplementation*) impl)->useObject(player);
}

/*
 *	TravelTerminalHelper
 */

TravelTerminalHelper* TravelTerminalHelper::staticInitializer = TravelTerminalHelper::instance();

TravelTerminalHelper::TravelTerminalHelper() {
	className = "TravelTerminal";

	DistributedObjectBroker::instance()->registerClass(className, this);
}

void TravelTerminalHelper::finalizeHelper() {
	TravelTerminalHelper::finalize();
}

DistributedObject* TravelTerminalHelper::instantiateObject() {
	return new TravelTerminal(DummyConstructorParameter::instance());
}

DistributedObjectAdapter* TravelTerminalHelper::createAdapter(DistributedObjectStub* obj) {
	DistributedObjectAdapter* adapter = new TravelTerminalAdapter((TravelTerminalImplementation*) obj->_getImplementation());

	obj->_setClassName(className);
	obj->_setClassHelper(this);

	adapter->setStub(obj);

	return adapter;
}

/*
 *	TravelTerminalServant
 */

TravelTerminalServant::TravelTerminalServant(unsigned int objCRC, unsigned long long objid, const UnicodeString& n, const String& tempn, float x, float z, float y, unsigned char terminaltype) : TerminalImplementation(objCRC, objid, n, tempn, x, z, y, terminaltype) {
	_classHelper = TravelTerminalHelper::instance();
}

TravelTerminalServant::~TravelTerminalServant() {
}

void TravelTerminalServant::_setStub(DistributedObjectStub* stub) {
	_this = (TravelTerminal*) stub;
	TerminalServant::_setStub(stub);
}

DistributedObjectStub* TravelTerminalServant::_getStub() {
	return _this;
}

