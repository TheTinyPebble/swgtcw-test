/*
 *	server/zone/objects/tangible/crafting/component/armorcomponent/ArmorComponent.h generated by engine3 IDL compiler 0.55
 */

#ifndef ARMORCOMPONENT_H_
#define ARMORCOMPONENT_H_

#include "engine/orb/DistributedObjectBroker.h"

#include "engine/service/Message.h"

class TangibleObject;

class DraftSchematic;

class CreatureObject;

class Component;

#include "../Component.h"

class ArmorComponent : public Component {
public:
	ArmorComponent(unsigned long long oid, unsigned int tempCRC, const UnicodeString& n, const String& tempn);

	ArmorComponent(CreatureObject* creature, unsigned int tempCRC, const UnicodeString& n, const String& tempn);

	ArmorComponent(ArmorComponent* component, unsigned long long oid);

	void updateCraftingValues(DraftSchematic* draftSchematic);

	String& getSpecialResist(int i);

	int getSpecialResistCount();

protected:
	ArmorComponent(DummyConstructorParameter* param);

	virtual ~ArmorComponent();

	String _return_getSpecialResist;

	friend class ArmorComponentHelper;
};

class ArmorComponentImplementation;

class ArmorComponentAdapter : public ComponentAdapter {
public:
	ArmorComponentAdapter(ArmorComponentImplementation* impl);

	Packet* invokeMethod(sys::uint32 methid, DistributedMethod* method);

	void updateCraftingValues(DraftSchematic* draftSchematic);

	String& getSpecialResist(int i);

	int getSpecialResistCount();

};

class ArmorComponentHelper : public DistributedObjectClassHelper, public Singleton<ArmorComponentHelper> {
	static ArmorComponentHelper* staticInitializer;

public:
	ArmorComponentHelper();

	void finalizeHelper();

	DistributedObject* instantiateObject();

	DistributedObjectAdapter* createAdapter(DistributedObjectStub* obj);

	friend class SingletonWrapper<ArmorComponentHelper>;
};

#include "../ComponentImplementation.h"

class ArmorComponentServant : public ComponentImplementation {
public:
	ArmorComponent* _this;

public:
	ArmorComponentServant(unsigned long long oid, unsigned int tempCRC, const UnicodeString& n, const String& tempn);
	ArmorComponentServant(CreatureObject* creature, unsigned int tempCRC, const UnicodeString& n, const String& tempn);
	ArmorComponentServant(ArmorComponent* component, unsigned long long oid);
	virtual ~ArmorComponentServant();

	void _setStub(DistributedObjectStub* stub);
	DistributedObjectStub* _getStub();

};

#endif /*ARMORCOMPONENT_H_*/
