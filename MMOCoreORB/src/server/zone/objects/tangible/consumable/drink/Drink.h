/*
 *	server/zone/objects/tangible/consumable/drink/Drink.h generated by engine3 IDL compiler 0.55
 */

#ifndef DRINK_H_
#define DRINK_H_

#include "engine/orb/DistributedObjectBroker.h"

class SceneObject;

class CreatureObject;

class Player;

class TangibleObject;

class Consumable;

#include "../Consumable.h"

class Drink : public Consumable {
public:
	Drink(unsigned long long oid, unsigned int tempCRC, const UnicodeString& n, const String& tempn);

	Drink(CreatureObject* creature, unsigned long long oid, unsigned int tempCRC, const UnicodeString& n, const String& tempn);

	int useObject(Player* player);

	void generateAttributes(SceneObject* obj);

	void setNutrition(int n);

	void setFlavor(int f);

	void setQuantity(int q);

	void setFilling(int f);

	int getNutrition();

	int getFlavor();

	int getQuantity();

	int getFilling();

protected:
	Drink(DummyConstructorParameter* param);

	virtual ~Drink();

	friend class DrinkHelper;
};

class DrinkImplementation;

class DrinkAdapter : public ConsumableAdapter {
public:
	DrinkAdapter(DrinkImplementation* impl);

	Packet* invokeMethod(sys::uint32 methid, DistributedMethod* method);

	int useObject(Player* player);

	void generateAttributes(SceneObject* obj);

	void setNutrition(int n);

	void setFlavor(int f);

	void setQuantity(int q);

	void setFilling(int f);

	int getNutrition();

	int getFlavor();

	int getQuantity();

	int getFilling();

};

class DrinkHelper : public DistributedObjectClassHelper, public Singleton<DrinkHelper> {
	static DrinkHelper* staticInitializer;

public:
	DrinkHelper();

	void finalizeHelper();

	DistributedObject* instantiateObject();

	DistributedObjectAdapter* createAdapter(DistributedObjectStub* obj);

	friend class SingletonWrapper<DrinkHelper>;
};

#include "../ConsumableImplementation.h"

class DrinkServant : public ConsumableImplementation {
public:
	Drink* _this;

public:
	DrinkServant(unsigned long long oid, unsigned int tempCRC, const UnicodeString& n, const String& tempn, int type);
	DrinkServant(CreatureObject* creature, unsigned long long oid, unsigned int tempCRC, const UnicodeString& n, const String& tempn, int type);
	virtual ~DrinkServant();

	void _setStub(DistributedObjectStub* stub);
	DistributedObjectStub* _getStub();

};

#endif /*DRINK_H_*/
