/*
 *	server/zone/objects/tangible/weapon/MeleeWeaponObject.cpp generated by engine3 IDL compiler 0.60
 */

#include "MeleeWeaponObject.h"

/*
 *	MeleeWeaponObjectStub
 */

MeleeWeaponObject::MeleeWeaponObject(LuaObject* templateData) : WeaponObject(DummyConstructorParameter::instance()) {
	_impl = new MeleeWeaponObjectImplementation(templateData);
	_impl->_setStub(this);

	((MeleeWeaponObjectImplementation*) _impl)->_serializationHelperMethod();
}

MeleeWeaponObject::MeleeWeaponObject(DummyConstructorParameter* param) : WeaponObject(param) {
}

MeleeWeaponObject::~MeleeWeaponObject() {
}

/*
 *	MeleeWeaponObjectImplementation
 */

MeleeWeaponObjectImplementation::~MeleeWeaponObjectImplementation() {
}

void MeleeWeaponObjectImplementation::_setStub(DistributedObjectStub* stub) {
	_this = (MeleeWeaponObject*) stub;
	WeaponObjectImplementation::_setStub(stub);
}

DistributedObjectStub* MeleeWeaponObjectImplementation::_getStub() {
	return _this;
}

MeleeWeaponObjectImplementation::operator const MeleeWeaponObject*() {
	return _this;
}

void MeleeWeaponObjectImplementation::_serializationHelperMethod() {
	WeaponObjectImplementation::_serializationHelperMethod();

}

/*
 *	MeleeWeaponObjectAdapter
 */

MeleeWeaponObjectAdapter::MeleeWeaponObjectAdapter(MeleeWeaponObjectImplementation* obj) : WeaponObjectAdapter(obj) {
}

Packet* MeleeWeaponObjectAdapter::invokeMethod(uint32 methid, DistributedMethod* inv) {
	Packet* resp = new MethodReturnMessage(0);

	switch (methid) {
	default:
		return NULL;
	}

	return resp;
}

/*
 *	MeleeWeaponObjectHelper
 */

MeleeWeaponObjectHelper* MeleeWeaponObjectHelper::staticInitializer = MeleeWeaponObjectHelper::instance();

MeleeWeaponObjectHelper::MeleeWeaponObjectHelper() {
	className = "MeleeWeaponObject";

	DistributedObjectBroker::instance()->registerClass(className, this);
}

void MeleeWeaponObjectHelper::finalizeHelper() {
	MeleeWeaponObjectHelper::finalize();
}

DistributedObject* MeleeWeaponObjectHelper::instantiateObject() {
	return new MeleeWeaponObject(DummyConstructorParameter::instance());
}

DistributedObjectAdapter* MeleeWeaponObjectHelper::createAdapter(DistributedObjectStub* obj) {
	DistributedObjectAdapter* adapter = new MeleeWeaponObjectAdapter((MeleeWeaponObjectImplementation*) obj->_getImplementation());

	obj->_setClassName(className);
	obj->_setClassHelper(this);

	adapter->setStub(obj);

	return adapter;
}

