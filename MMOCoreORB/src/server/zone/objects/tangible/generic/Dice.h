/*
 *	server/zone/objects/tangible/generic/Dice.h generated by engine3 IDL compiler 0.55
 */

#ifndef DICE_H_
#define DICE_H_

#include "engine/orb/DistributedObjectBroker.h"

class SceneObject;

class CreatureObject;

class Player;

class TangibleObject;

class GenericItem;

#include "GenericItem.h"

class Dice : public GenericItem {
public:
	Dice(unsigned long long oid, unsigned int tempCRC, const UnicodeString& n, const String& tempn);

	Dice(CreatureObject* creature, unsigned long long oid, unsigned int tempCRC, const UnicodeString& n, const String& tempn);

	Dice(CreatureObject* creature, unsigned int tempCRC, const UnicodeString& n, const String& tempn);

	void generateAttributes(SceneObject* obj);

	void rollDice(Player* player, int dnum);

	void setConfigurableDice(int dsides);

protected:
	Dice(DummyConstructorParameter* param);

	virtual ~Dice();

	friend class DiceHelper;
};

class DiceImplementation;

class DiceAdapter : public GenericItemAdapter {
public:
	DiceAdapter(DiceImplementation* impl);

	Packet* invokeMethod(sys::uint32 methid, DistributedMethod* method);

	void generateAttributes(SceneObject* obj);

	void rollDice(Player* player, int dnum);

	void setConfigurableDice(int dsides);

};

class DiceHelper : public DistributedObjectClassHelper, public Singleton<DiceHelper> {
	static DiceHelper* staticInitializer;

public:
	DiceHelper();

	void finalizeHelper();

	DistributedObject* instantiateObject();

	DistributedObjectAdapter* createAdapter(DistributedObjectStub* obj);

	friend class SingletonWrapper<DiceHelper>;
};

#include "GenericItemImplementation.h"

class DiceServant : public GenericItemImplementation {
public:
	Dice* _this;

public:
	DiceServant(unsigned long long oid, unsigned int tempCRC, const UnicodeString& n, const String& tempn, int gitype);
	DiceServant(CreatureObject* creature, unsigned long long oid, unsigned int tempCRC, const UnicodeString& n, const String& tempn, int gitype);
	virtual ~DiceServant();

	void _setStub(DistributedObjectStub* stub);
	DistributedObjectStub* _getStub();

};

#endif /*DICE_H_*/
