/*
 *	server/zone/objects/tangible/tools/smuggler/UpgradeKit.cpp generated by engine3 IDL compiler 0.55
 */

#include "UpgradeKit.h"

#include "UpgradeKitImplementation.h"

#include "../Tool.h"

/*
 *	UpgradeKitStub
 */

UpgradeKit::UpgradeKit(unsigned long long oid, unsigned char ktype) : Tool(DummyConstructorParameter::instance()) {
	_impl = new UpgradeKitImplementation(oid, ktype);
	_impl->_setStub(this);
}

UpgradeKit::UpgradeKit(unsigned long long oid, unsigned int tempCRC, const UnicodeString& n, const String& tempn, unsigned char ktype) : Tool(DummyConstructorParameter::instance()) {
	_impl = new UpgradeKitImplementation(oid, tempCRC, n, tempn, ktype);
	_impl->_setStub(this);
}

UpgradeKit::UpgradeKit(DummyConstructorParameter* param) : Tool(param) {
}

UpgradeKit::~UpgradeKit() {
}

void UpgradeKit::setKitType(unsigned char ktype) {
	if (_impl == NULL) {
		if (!deployed)
			throw ObjectNotDeployedException(this);

		DistributedMethod method(this, 6);
		method.addUnsignedCharParameter(ktype);

		method.executeWithVoidReturn();
	} else
		((UpgradeKitImplementation*) _impl)->setKitType(ktype);
}

unsigned char UpgradeKit::getKitType() {
	if (_impl == NULL) {
		if (!deployed)
			throw ObjectNotDeployedException(this);

		DistributedMethod method(this, 7);

		return method.executeWithUnsignedCharReturn();
	} else
		return ((UpgradeKitImplementation*) _impl)->getKitType();
}

/*
 *	UpgradeKitAdapter
 */

UpgradeKitAdapter::UpgradeKitAdapter(UpgradeKitImplementation* obj) : ToolAdapter(obj) {
}

Packet* UpgradeKitAdapter::invokeMethod(uint32 methid, DistributedMethod* inv) {
	Packet* resp = new MethodReturnMessage(0);

	switch (methid) {
	case 6:
		setKitType(inv->getUnsignedCharParameter());
		break;
	case 7:
		resp->insertByte(getKitType());
		break;
	default:
		return NULL;
	}

	return resp;
}

void UpgradeKitAdapter::setKitType(unsigned char ktype) {
	return ((UpgradeKitImplementation*) impl)->setKitType(ktype);
}

unsigned char UpgradeKitAdapter::getKitType() {
	return ((UpgradeKitImplementation*) impl)->getKitType();
}

/*
 *	UpgradeKitHelper
 */

UpgradeKitHelper* UpgradeKitHelper::staticInitializer = UpgradeKitHelper::instance();

UpgradeKitHelper::UpgradeKitHelper() {
	className = "UpgradeKit";

	DistributedObjectBroker::instance()->registerClass(className, this);
}

void UpgradeKitHelper::finalizeHelper() {
	UpgradeKitHelper::finalize();
}

DistributedObject* UpgradeKitHelper::instantiateObject() {
	return new UpgradeKit(DummyConstructorParameter::instance());
}

DistributedObjectAdapter* UpgradeKitHelper::createAdapter(DistributedObjectStub* obj) {
	DistributedObjectAdapter* adapter = new UpgradeKitAdapter((UpgradeKitImplementation*) obj->_getImplementation());

	obj->_setClassName(className);
	obj->_setClassHelper(this);

	adapter->setStub(obj);

	return adapter;
}

/*
 *	UpgradeKitServant
 */

UpgradeKitServant::UpgradeKitServant(unsigned long long oid, unsigned int type) : ToolImplementation(oid, type) {
	_classHelper = UpgradeKitHelper::instance();
}

UpgradeKitServant::~UpgradeKitServant() {
}

void UpgradeKitServant::_setStub(DistributedObjectStub* stub) {
	_this = (UpgradeKit*) stub;
	ToolServant::_setStub(stub);
}

DistributedObjectStub* UpgradeKitServant::_getStub() {
	return _this;
}

