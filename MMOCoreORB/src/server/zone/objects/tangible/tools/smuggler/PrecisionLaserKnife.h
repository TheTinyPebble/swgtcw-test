/*
 *	server/zone/objects/tangible/tools/smuggler/PrecisionLaserKnife.h generated by engine3 IDL compiler 0.55
 */

#ifndef PRECISIONLASERKNIFE_H_
#define PRECISIONLASERKNIFE_H_

#include "engine/orb/DistributedObjectBroker.h"

class Tool;

#include "../Tool.h"

class PrecisionLaserKnife : public Tool {
public:
	PrecisionLaserKnife(unsigned long long oid);

	PrecisionLaserKnife(unsigned long long oid, unsigned int tempCRC, const UnicodeString& n, const String& tempn);

protected:
	PrecisionLaserKnife(DummyConstructorParameter* param);

	virtual ~PrecisionLaserKnife();

	friend class PrecisionLaserKnifeHelper;
};

class PrecisionLaserKnifeImplementation;

class PrecisionLaserKnifeAdapter : public ToolAdapter {
public:
	PrecisionLaserKnifeAdapter(PrecisionLaserKnifeImplementation* impl);

	Packet* invokeMethod(sys::uint32 methid, DistributedMethod* method);

};

class PrecisionLaserKnifeHelper : public DistributedObjectClassHelper, public Singleton<PrecisionLaserKnifeHelper> {
	static PrecisionLaserKnifeHelper* staticInitializer;

public:
	PrecisionLaserKnifeHelper();

	void finalizeHelper();

	DistributedObject* instantiateObject();

	DistributedObjectAdapter* createAdapter(DistributedObjectStub* obj);

	friend class SingletonWrapper<PrecisionLaserKnifeHelper>;
};

#include "../ToolImplementation.h"

class PrecisionLaserKnifeServant : public ToolImplementation {
public:
	PrecisionLaserKnife* _this;

public:
	PrecisionLaserKnifeServant(unsigned long long oid, unsigned int type);
	virtual ~PrecisionLaserKnifeServant();

	void _setStub(DistributedObjectStub* stub);
	DistributedObjectStub* _getStub();

};

#endif /*PRECISIONLASERKNIFE_H_*/
