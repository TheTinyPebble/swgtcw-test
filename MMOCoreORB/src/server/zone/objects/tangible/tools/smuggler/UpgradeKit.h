/*
 *	server/zone/objects/tangible/tools/smuggler/UpgradeKit.h generated by engine3 IDL compiler 0.55
 */

#ifndef UPGRADEKIT_H_
#define UPGRADEKIT_H_

#include "engine/orb/DistributedObjectBroker.h"

class Tool;

#include "../Tool.h"

class UpgradeKit : public Tool {
public:
	UpgradeKit(unsigned long long oid, unsigned char ktype = 0);

	UpgradeKit(unsigned long long oid, unsigned int tempCRC, const UnicodeString& n, const String& tempn, unsigned char ktype = 0);

	void setKitType(unsigned char ktype);

	unsigned char getKitType();

protected:
	UpgradeKit(DummyConstructorParameter* param);

	virtual ~UpgradeKit();

	friend class UpgradeKitHelper;
};

class UpgradeKitImplementation;

class UpgradeKitAdapter : public ToolAdapter {
public:
	UpgradeKitAdapter(UpgradeKitImplementation* impl);

	Packet* invokeMethod(sys::uint32 methid, DistributedMethod* method);

	void setKitType(unsigned char ktype);

	unsigned char getKitType();

};

class UpgradeKitHelper : public DistributedObjectClassHelper, public Singleton<UpgradeKitHelper> {
	static UpgradeKitHelper* staticInitializer;

public:
	UpgradeKitHelper();

	void finalizeHelper();

	DistributedObject* instantiateObject();

	DistributedObjectAdapter* createAdapter(DistributedObjectStub* obj);

	friend class SingletonWrapper<UpgradeKitHelper>;
};

#include "../ToolImplementation.h"

class UpgradeKitServant : public ToolImplementation {
public:
	UpgradeKit* _this;

public:
	UpgradeKitServant(unsigned long long oid, unsigned int type);
	virtual ~UpgradeKitServant();

	void _setStub(DistributedObjectStub* stub);
	DistributedObjectStub* _getStub();

};

#endif /*UPGRADEKIT_H_*/
