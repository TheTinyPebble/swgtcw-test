/*
 *	server/zone/objects/waypoint/WaypointObject.h generated by engine3 IDL compiler 0.55
 */

#ifndef WAYPOINTOBJECT_H_
#define WAYPOINTOBJECT_H_

#include "engine/orb/DistributedObjectBroker.h"

class SceneObject;

class Player;

#include "../scene/SceneObject.h"

class WaypointObject : public SceneObject {
public:
	WaypointObject(unsigned long long objid);

	WaypointObject(unsigned long long objid, SceneObject* obj);

	void activate(Player* player);

	void deactivate(Player* player);

	void updateWaypoint(Player* player);

	void updateCustomName(Player* player, const String& value);

	bool toggleActivation();

	void setInternalNote(const String& message);

	void setPlanetName(const String& planet);

	void setWaypointType(unsigned char type);

	void setActivated(bool active);

	String& getPlanetName();

	unsigned int getPlanetCRC();

	String& getInternalNote();

	unsigned char getWaypointType();

	bool isActivated();

protected:
	WaypointObject(DummyConstructorParameter* param);

	virtual ~WaypointObject();

	String _return_getInternalNote;
	String _return_getPlanetName;

	friend class WaypointObjectHelper;
};

class WaypointObjectImplementation;

class WaypointObjectAdapter : public SceneObjectAdapter {
public:
	WaypointObjectAdapter(WaypointObjectImplementation* impl);

	Packet* invokeMethod(sys::uint32 methid, DistributedMethod* method);

	void activate(Player* player);

	void deactivate(Player* player);

	void updateWaypoint(Player* player);

	void updateCustomName(Player* player, const String& value);

	bool toggleActivation();

	void setInternalNote(const String& message);

	void setPlanetName(const String& planet);

	void setWaypointType(unsigned char type);

	void setActivated(bool active);

	String& getPlanetName();

	unsigned int getPlanetCRC();

	String& getInternalNote();

	unsigned char getWaypointType();

	bool isActivated();

protected:
	String _param1_updateCustomName__Player_String_;
	String _param0_setInternalNote__String_;
	String _param0_setPlanetName__String_;
};

class WaypointObjectHelper : public DistributedObjectClassHelper, public Singleton<WaypointObjectHelper> {
	static WaypointObjectHelper* staticInitializer;

public:
	WaypointObjectHelper();

	void finalizeHelper();

	DistributedObject* instantiateObject();

	DistributedObjectAdapter* createAdapter(DistributedObjectStub* obj);

	friend class SingletonWrapper<WaypointObjectHelper>;
};

#include "../scene/SceneObjectImplementation.h"

class WaypointObjectServant : public SceneObjectImplementation {
public:
	WaypointObject* _this;

public:
	WaypointObjectServant(unsigned long long objid, int type);
	virtual ~WaypointObjectServant();

	void _setStub(DistributedObjectStub* stub);
	DistributedObjectStub* _getStub();

};

#endif /*WAYPOINTOBJECT_H_*/
