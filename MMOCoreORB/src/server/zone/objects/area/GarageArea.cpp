/*
 *	server/zone/objects/area/GarageArea.cpp generated by engine3 IDL compiler 0.60
 */

#include "GarageArea.h"

#include "server/zone/objects/scene/SceneObject.h"

#include "server/zone/objects/player/PlayerCreature.h"

/*
 *	GarageAreaStub
 */

GarageArea::GarageArea() : ActiveArea(DummyConstructorParameter::instance()) {
	GarageAreaImplementation* _implementation = new GarageAreaImplementation();
	_impl = _implementation;
	_impl->_setStub(this);
}

GarageArea::GarageArea(DummyConstructorParameter* param) : ActiveArea(param) {
}

GarageArea::~GarageArea() {
}


void GarageArea::notifyEnter(SceneObject* player) {
	GarageAreaImplementation* _implementation = (GarageAreaImplementation*) _getImplementation();
	if (_implementation == NULL) {
		if (!deployed)
			throw ObjectNotDeployedException(this);

		DistributedMethod method(this, 6);
		method.addObjectParameter(player);

		method.executeWithVoidReturn();
	} else
		_implementation->notifyEnter(player);
}

DistributedObjectServant* GarageArea::_getImplementation() {

	_updated = true;
	return _impl;
}

void GarageArea::_setImplementation(DistributedObjectServant* servant) {
	_impl = servant;}

/*
 *	GarageAreaImplementation
 */

GarageAreaImplementation::GarageAreaImplementation(DummyConstructorParameter* param) : ActiveAreaImplementation(param) {
	_initializeImplementation();
}


GarageAreaImplementation::~GarageAreaImplementation() {
}


void GarageAreaImplementation::finalize() {
}

void GarageAreaImplementation::_initializeImplementation() {
	_setClassHelper(GarageAreaHelper::instance());

	_serializationHelperMethod();
}

void GarageAreaImplementation::_setStub(DistributedObjectStub* stub) {
	_this = (GarageArea*) stub;
	ActiveAreaImplementation::_setStub(stub);
}

DistributedObjectStub* GarageAreaImplementation::_getStub() {
	return _this;
}

GarageAreaImplementation::operator const GarageArea*() {
	return _this;
}

void GarageAreaImplementation::lock(bool doLock) {
	_this->lock(doLock);
}

void GarageAreaImplementation::lock(ManagedObject* obj) {
	_this->lock(obj);
}

void GarageAreaImplementation::rlock(bool doLock) {
	_this->rlock(doLock);
}

void GarageAreaImplementation::wlock(bool doLock) {
	_this->wlock(doLock);
}

void GarageAreaImplementation::wlock(ManagedObject* obj) {
	_this->wlock(obj);
}

void GarageAreaImplementation::unlock(bool doLock) {
	_this->unlock(doLock);
}

void GarageAreaImplementation::runlock(bool doLock) {
	_this->runlock(doLock);
}

void GarageAreaImplementation::_serializationHelperMethod() {
	ActiveAreaImplementation::_serializationHelperMethod();

	_setClassName("GarageArea");

}

GarageAreaImplementation::GarageAreaImplementation() {
	_initializeImplementation();
	// server/zone/objects/area/GarageArea.idl(54):  		Logger.setLoggingName("GarageArea");
	Logger::setLoggingName("GarageArea");
}

void GarageAreaImplementation::notifyEnter(SceneObject* player) {
	// server/zone/objects/area/GarageArea.idl(58):  	}
	if (player->isPlayerCreature()){
	// server/zone/objects/area/GarageArea.idl(59):  			PlayerCreature playerCreature = (PlayerCreature) player;
	PlayerCreature* playerCreature = (PlayerCreature*) player;
	// server/zone/objects/area/GarageArea.idl(60):  			playerCreature.sendSystemMessage("@pet/pet_menu:garage_proximity");
	playerCreature->sendSystemMessage("@pet/pet_menu:garage_proximity");
}
}

/*
 *	GarageAreaAdapter
 */

GarageAreaAdapter::GarageAreaAdapter(GarageAreaImplementation* obj) : ActiveAreaAdapter(obj) {
}

Packet* GarageAreaAdapter::invokeMethod(uint32 methid, DistributedMethod* inv) {
	Packet* resp = new MethodReturnMessage(0);

	switch (methid) {
	case 6:
		notifyEnter((SceneObject*) inv->getObjectParameter());
		break;
	default:
		return NULL;
	}

	return resp;
}

void GarageAreaAdapter::notifyEnter(SceneObject* player) {
	((GarageAreaImplementation*) impl)->notifyEnter(player);
}

/*
 *	GarageAreaHelper
 */

GarageAreaHelper* GarageAreaHelper::staticInitializer = GarageAreaHelper::instance();

GarageAreaHelper::GarageAreaHelper() {
	className = "GarageArea";

	DistributedObjectBroker::instance()->registerClass(className, this);
}

void GarageAreaHelper::finalizeHelper() {
	GarageAreaHelper::finalize();
}

DistributedObject* GarageAreaHelper::instantiateObject() {
	return new GarageArea(DummyConstructorParameter::instance());
}

DistributedObjectServant* GarageAreaHelper::instantiateServant() {
	return new GarageAreaImplementation(DummyConstructorParameter::instance());
}

DistributedObjectAdapter* GarageAreaHelper::createAdapter(DistributedObjectStub* obj) {
	DistributedObjectAdapter* adapter = new GarageAreaAdapter((GarageAreaImplementation*) obj->_getImplementation());

	obj->_setClassName(className);
	obj->_setClassHelper(this);

	adapter->setStub(obj);

	return adapter;
}

