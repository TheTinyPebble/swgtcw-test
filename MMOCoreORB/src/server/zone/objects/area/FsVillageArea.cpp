/*
 *	server/zone/objects/area/FsVillageArea.cpp generated by engine3 IDL compiler 0.60
 */

#include "FsVillageArea.h"

#include "server/zone/objects/scene/SceneObject.h"

#include "server/zone/objects/creature/CreatureObject.h"

/*
 *	FsVillageAreaStub
 */

enum {RPC_NOTIFYENTER__SCENEOBJECT_ = 6};

FsVillageArea::FsVillageArea() : ActiveArea(DummyConstructorParameter::instance()) {
	FsVillageAreaImplementation* _implementation = new FsVillageAreaImplementation();
	_impl = _implementation;
	_impl->_setStub(this);
	_setClassName("FsVillageArea");
}

FsVillageArea::FsVillageArea(DummyConstructorParameter* param) : ActiveArea(param) {
	_setClassName("FsVillageArea");
}

FsVillageArea::~FsVillageArea() {
}



void FsVillageArea::notifyEnter(SceneObject* player) {
	FsVillageAreaImplementation* _implementation = static_cast<FsVillageAreaImplementation*>(_getImplementation());
	if (_implementation == NULL) {
		if (!deployed)
			throw ObjectNotDeployedException(this);

		DistributedMethod method(this, RPC_NOTIFYENTER__SCENEOBJECT_);
		method.addObjectParameter(player);

		method.executeWithVoidReturn();
	} else
		_implementation->notifyEnter(player);
}

DistributedObjectServant* FsVillageArea::_getImplementation() {

	 if (!_updated) _updated = true;
	return _impl;
}

void FsVillageArea::_setImplementation(DistributedObjectServant* servant) {
	_impl = servant;
}

/*
 *	FsVillageAreaImplementation
 */

FsVillageAreaImplementation::FsVillageAreaImplementation(DummyConstructorParameter* param) : ActiveAreaImplementation(param) {
	_initializeImplementation();
}


FsVillageAreaImplementation::~FsVillageAreaImplementation() {
}


void FsVillageAreaImplementation::finalize() {
}

void FsVillageAreaImplementation::_initializeImplementation() {
	_setClassHelper(FsVillageAreaHelper::instance());

	_this = NULL;

	_serializationHelperMethod();
}

void FsVillageAreaImplementation::_setStub(DistributedObjectStub* stub) {
	_this = static_cast<FsVillageArea*>(stub);
	ActiveAreaImplementation::_setStub(stub);
}

DistributedObjectStub* FsVillageAreaImplementation::_getStub() {
	return _this.get();
}

FsVillageAreaImplementation::operator const FsVillageArea*() {
	return _this.get();
}

void FsVillageAreaImplementation::lock(bool doLock) {
	_this.getReferenceUnsafeStaticCast()->lock(doLock);
}

void FsVillageAreaImplementation::lock(ManagedObject* obj) {
	_this.getReferenceUnsafeStaticCast()->lock(obj);
}

void FsVillageAreaImplementation::rlock(bool doLock) {
	_this.getReferenceUnsafeStaticCast()->rlock(doLock);
}

void FsVillageAreaImplementation::wlock(bool doLock) {
	_this.getReferenceUnsafeStaticCast()->wlock(doLock);
}

void FsVillageAreaImplementation::wlock(ManagedObject* obj) {
	_this.getReferenceUnsafeStaticCast()->wlock(obj);
}

void FsVillageAreaImplementation::unlock(bool doLock) {
	_this.getReferenceUnsafeStaticCast()->unlock(doLock);
}

void FsVillageAreaImplementation::runlock(bool doLock) {
	_this.getReferenceUnsafeStaticCast()->runlock(doLock);
}

void FsVillageAreaImplementation::_serializationHelperMethod() {
	ActiveAreaImplementation::_serializationHelperMethod();

	_setClassName("FsVillageArea");

}

void FsVillageAreaImplementation::readObject(ObjectInputStream* stream) {
	uint16 _varCount = stream->readShort();
	for (int i = 0; i < _varCount; ++i) {
		String _name;
		_name.parseFromBinaryStream(stream);

		uint32 _varSize = stream->readInt();

		int _currentOffset = stream->getOffset();

		if(FsVillageAreaImplementation::readObjectMember(stream, _name)) {
		}

		stream->setOffset(_currentOffset + _varSize);
	}

	initializeTransientMembers();
}

bool FsVillageAreaImplementation::readObjectMember(ObjectInputStream* stream, const String& _name) {
	if (ActiveAreaImplementation::readObjectMember(stream, _name))
		return true;


	return false;
}

void FsVillageAreaImplementation::writeObject(ObjectOutputStream* stream) {
	int _currentOffset = stream->getOffset();
	stream->writeShort(0);
	int _varCount = FsVillageAreaImplementation::writeObjectMembers(stream);
	stream->writeShort(_currentOffset, _varCount);
}

int FsVillageAreaImplementation::writeObjectMembers(ObjectOutputStream* stream) {
	int _count = ActiveAreaImplementation::writeObjectMembers(stream);

	String _name;
	int _offset;
	uint32 _totalSize;

	return _count + 0;
}

FsVillageAreaImplementation::FsVillageAreaImplementation() : ActiveAreaImplementation() {
	_initializeImplementation();
}

/*
 *	FsVillageAreaAdapter
 */


#include "engine/orb/messages/InvokeMethodMessage.h"


FsVillageAreaAdapter::FsVillageAreaAdapter(FsVillageArea* obj) : ActiveAreaAdapter(obj) {
}

void FsVillageAreaAdapter::invokeMethod(uint32 methid, DistributedMethod* inv) {
	DOBMessage* resp = inv->getInvocationMessage();

	switch (methid) {
	case RPC_NOTIFYENTER__SCENEOBJECT_:
		{
			notifyEnter(static_cast<SceneObject*>(inv->getObjectParameter()));
		}
		break;
	default:
		throw Exception("Method does not exists");
	}
}

void FsVillageAreaAdapter::notifyEnter(SceneObject* player) {
	(static_cast<FsVillageArea*>(stub))->notifyEnter(player);
}

/*
 *	FsVillageAreaHelper
 */

FsVillageAreaHelper* FsVillageAreaHelper::staticInitializer = FsVillageAreaHelper::instance();

FsVillageAreaHelper::FsVillageAreaHelper() {
	className = "FsVillageArea";

	Core::getObjectBroker()->registerClass(className, this);
}

void FsVillageAreaHelper::finalizeHelper() {
	FsVillageAreaHelper::finalize();
}

DistributedObject* FsVillageAreaHelper::instantiateObject() {
	return new FsVillageArea(DummyConstructorParameter::instance());
}

DistributedObjectServant* FsVillageAreaHelper::instantiateServant() {
	return new FsVillageAreaImplementation();
}

DistributedObjectAdapter* FsVillageAreaHelper::createAdapter(DistributedObjectStub* obj) {
	DistributedObjectAdapter* adapter = new FsVillageAreaAdapter(static_cast<FsVillageArea*>(obj));

	obj->_setClassName(className);
	obj->_setClassHelper(this);

	adapter->setStub(obj);

	return adapter;
}

