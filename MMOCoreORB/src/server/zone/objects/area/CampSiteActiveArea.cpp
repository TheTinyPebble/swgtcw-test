/*
 *	server/zone/objects/area/CampSiteActiveArea.cpp generated by engine3 IDL compiler 0.60
 */

#include "CampSiteActiveArea.h"

#include "server/zone/objects/scene/SceneObject.h"

#include "server/zone/objects/player/PlayerCreature.h"

#include "server/zone/objects/area/events/CampDespawnEvent.h"

/*
 *	CampSiteActiveAreaStub
 */

CampSiteActiveArea::CampSiteActiveArea() : ActiveArea(DummyConstructorParameter::instance()) {
	CampSiteActiveAreaImplementation* _implementation = new CampSiteActiveAreaImplementation();
	_impl = _implementation;
	_impl->_setStub(this);
}

CampSiteActiveArea::CampSiteActiveArea(DummyConstructorParameter* param) : ActiveArea(param) {
}

CampSiteActiveArea::~CampSiteActiveArea() {
}


void CampSiteActiveArea::notifyEnter(SceneObject* player) {
	CampSiteActiveAreaImplementation* _implementation = (CampSiteActiveAreaImplementation*) _getImplementation();
	if (_implementation == NULL) {
		if (!deployed)
			throw ObjectNotDeployedException(this);

		DistributedMethod method(this, 6);
		method.addObjectParameter(player);

		method.executeWithVoidReturn();
	} else
		_implementation->notifyEnter(player);
}

DistributedObjectServant* CampSiteActiveArea::_getImplementation() {

	_updated = true;
	return _impl;
}

void CampSiteActiveArea::_setImplementation(DistributedObjectServant* servant) {
	_impl = servant;}

/*
 *	CampSiteActiveAreaImplementation
 */

CampSiteActiveAreaImplementation::CampSiteActiveAreaImplementation(DummyConstructorParameter* param) : ActiveAreaImplementation(param) {
	_initializeImplementation();
}


CampSiteActiveAreaImplementation::~CampSiteActiveAreaImplementation() {
}


void CampSiteActiveAreaImplementation::finalize() {
}

void CampSiteActiveAreaImplementation::_initializeImplementation() {
	_setClassHelper(CampSiteActiveAreaHelper::instance());

	_serializationHelperMethod();
}

void CampSiteActiveAreaImplementation::_setStub(DistributedObjectStub* stub) {
	_this = (CampSiteActiveArea*) stub;
	ActiveAreaImplementation::_setStub(stub);
}

DistributedObjectStub* CampSiteActiveAreaImplementation::_getStub() {
	return _this;
}

CampSiteActiveAreaImplementation::operator const CampSiteActiveArea*() {
	return _this;
}

void CampSiteActiveAreaImplementation::lock(bool doLock) {
	_this->lock(doLock);
}

void CampSiteActiveAreaImplementation::lock(ManagedObject* obj) {
	_this->lock(obj);
}

void CampSiteActiveAreaImplementation::rlock(bool doLock) {
	_this->rlock(doLock);
}

void CampSiteActiveAreaImplementation::wlock(bool doLock) {
	_this->wlock(doLock);
}

void CampSiteActiveAreaImplementation::wlock(ManagedObject* obj) {
	_this->wlock(obj);
}

void CampSiteActiveAreaImplementation::unlock(bool doLock) {
	_this->unlock(doLock);
}

void CampSiteActiveAreaImplementation::runlock(bool doLock) {
	_this->runlock(doLock);
}

void CampSiteActiveAreaImplementation::_serializationHelperMethod() {
	ActiveAreaImplementation::_serializationHelperMethod();

	_setClassName("CampSiteActiveArea");

	addSerializableVariable("spawnedObject", &spawnedObject);
	addSerializableVariable("currentXP", &currentXP);
	addSerializableVariable("campType", &campType);
	addSerializableVariable("aggroMod", &aggroMod);
	addSerializableVariable("areaRange", &areaRange);
	addSerializableVariable("campObjects", &campObjects);
	addSerializableVariable("visitors", &visitors);
	addSerializableVariable("abandoned", &abandoned);
	addSerializableVariable("despawnEvent", &despawnEvent);
	addSerializableVariable("maxXP", &maxXP);
	addSerializableVariable("campModifier", &campModifier);
	addSerializableVariable("duration", &duration);
	addSerializableVariable("campOwner", &campOwner);
	addSerializableVariable("placementTime", &placementTime);
}

CampSiteActiveAreaImplementation::CampSiteActiveAreaImplementation() {
	_initializeImplementation();
	// server/zone/objects/area/CampSiteActiveArea.idl(86):  		currentXP = 0;
	currentXP = 0;
	// server/zone/objects/area/CampSiteActiveArea.idl(87):  		campType = 0;
	campType = 0;
	// server/zone/objects/area/CampSiteActiveArea.idl(88):  		aggroMod = 0;
	aggroMod = 0;
	// server/zone/objects/area/CampSiteActiveArea.idl(89):  		areaRange = 0;
	areaRange = 0;
	// server/zone/objects/area/CampSiteActiveArea.idl(91):  		abandoned = false;
	abandoned = false;
	// server/zone/objects/area/CampSiteActiveArea.idl(92):  		maxXP = 0;
	maxXP = 0;
	// server/zone/objects/area/CampSiteActiveArea.idl(93):  		campModifier = 0;
	campModifier = 0;
	// server/zone/objects/area/CampSiteActiveArea.idl(94):  		duration = 0;
	duration = 0;
	// server/zone/objects/area/CampSiteActiveArea.idl(95):  		Logger.setLoggingName("CampsiteActiveArea");
	Logger::setLoggingName("CampsiteActiveArea");
}

void CampSiteActiveAreaImplementation::notifyEnter(SceneObject* player) {
	// server/zone/objects/area/CampSiteActiveArea.idl(99):  	}
	if (!player->isPlayerCreature())	// server/zone/objects/area/CampSiteActiveArea.idl(100):  			return;
	return;
}

/*
 *	CampSiteActiveAreaAdapter
 */

CampSiteActiveAreaAdapter::CampSiteActiveAreaAdapter(CampSiteActiveAreaImplementation* obj) : ActiveAreaAdapter(obj) {
}

Packet* CampSiteActiveAreaAdapter::invokeMethod(uint32 methid, DistributedMethod* inv) {
	Packet* resp = new MethodReturnMessage(0);

	switch (methid) {
	case 6:
		notifyEnter((SceneObject*) inv->getObjectParameter());
		break;
	default:
		return NULL;
	}

	return resp;
}

void CampSiteActiveAreaAdapter::notifyEnter(SceneObject* player) {
	((CampSiteActiveAreaImplementation*) impl)->notifyEnter(player);
}

/*
 *	CampSiteActiveAreaHelper
 */

CampSiteActiveAreaHelper* CampSiteActiveAreaHelper::staticInitializer = CampSiteActiveAreaHelper::instance();

CampSiteActiveAreaHelper::CampSiteActiveAreaHelper() {
	className = "CampSiteActiveArea";

	DistributedObjectBroker::instance()->registerClass(className, this);
}

void CampSiteActiveAreaHelper::finalizeHelper() {
	CampSiteActiveAreaHelper::finalize();
}

DistributedObject* CampSiteActiveAreaHelper::instantiateObject() {
	return new CampSiteActiveArea(DummyConstructorParameter::instance());
}

DistributedObjectServant* CampSiteActiveAreaHelper::instantiateServant() {
	return new CampSiteActiveAreaImplementation(DummyConstructorParameter::instance());
}

DistributedObjectAdapter* CampSiteActiveAreaHelper::createAdapter(DistributedObjectStub* obj) {
	DistributedObjectAdapter* adapter = new CampSiteActiveAreaAdapter((CampSiteActiveAreaImplementation*) obj->_getImplementation());

	obj->_setClassName(className);
	obj->_setClassHelper(this);

	adapter->setStub(obj);

	return adapter;
}

