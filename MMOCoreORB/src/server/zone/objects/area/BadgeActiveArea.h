/*
 *	server/zone/objects/area/BadgeActiveArea.h generated by engine3 IDL compiler 0.55
 */

#ifndef BADGEACTIVEAREA_H_
#define BADGEACTIVEAREA_H_

#include "engine/orb/DistributedObjectBroker.h"

class ActiveArea;

class Player;

#include "ActiveArea.h"

class BadgeActiveArea : public ActiveArea {
public:
	BadgeActiveArea(float x, float y, float z, float radius, unsigned int badge);

	void onEnter(Player* player);

protected:
	BadgeActiveArea(DummyConstructorParameter* param);

	virtual ~BadgeActiveArea();

	friend class BadgeActiveAreaHelper;
};

class BadgeActiveAreaImplementation;

class BadgeActiveAreaAdapter : public ActiveAreaAdapter {
public:
	BadgeActiveAreaAdapter(BadgeActiveAreaImplementation* impl);

	Packet* invokeMethod(sys::uint32 methid, DistributedMethod* method);

	void onEnter(Player* player);

};

class BadgeActiveAreaHelper : public DistributedObjectClassHelper, public Singleton<BadgeActiveAreaHelper> {
	static BadgeActiveAreaHelper* staticInitializer;

public:
	BadgeActiveAreaHelper();

	void finalizeHelper();

	DistributedObject* instantiateObject();

	DistributedObjectAdapter* createAdapter(DistributedObjectStub* obj);

	friend class SingletonWrapper<BadgeActiveAreaHelper>;
};

#include "ActiveAreaImplementation.h"

class BadgeActiveAreaServant : public ActiveAreaImplementation {
public:
	BadgeActiveArea* _this;

public:
	BadgeActiveAreaServant(float x, float y, float z, float radius);
	virtual ~BadgeActiveAreaServant();

	void _setStub(DistributedObjectStub* stub);
	DistributedObjectStub* _getStub();

};

#endif /*BADGEACTIVEAREA_H_*/
