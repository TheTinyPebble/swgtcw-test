/*
 *	server/zone/objects/area/ActiveAreaTrigger.h generated by engine3 IDL compiler 0.55
 */

#ifndef ACTIVEAREATRIGGER_H_
#define ACTIVEAREATRIGGER_H_

#include "engine/orb/DistributedObjectBroker.h"

class SceneObject;

class ActiveArea;

#include "../scene/SceneObject.h"

class ActiveAreaTrigger : public SceneObject {
public:
	ActiveAreaTrigger(ActiveArea* area);

	void forceTriggerEnter();

	void forceTriggerExit();

protected:
	ActiveAreaTrigger(DummyConstructorParameter* param);

	virtual ~ActiveAreaTrigger();

	friend class ActiveAreaTriggerHelper;
};

class ActiveAreaTriggerImplementation;

class ActiveAreaTriggerAdapter : public SceneObjectAdapter {
public:
	ActiveAreaTriggerAdapter(ActiveAreaTriggerImplementation* impl);

	Packet* invokeMethod(sys::uint32 methid, DistributedMethod* method);

	void forceTriggerEnter();

	void forceTriggerExit();

};

class ActiveAreaTriggerHelper : public DistributedObjectClassHelper, public Singleton<ActiveAreaTriggerHelper> {
	static ActiveAreaTriggerHelper* staticInitializer;

public:
	ActiveAreaTriggerHelper();

	void finalizeHelper();

	DistributedObject* instantiateObject();

	DistributedObjectAdapter* createAdapter(DistributedObjectStub* obj);

	friend class SingletonWrapper<ActiveAreaTriggerHelper>;
};

#include "../scene/SceneObjectImplementation.h"

class ActiveAreaTriggerServant : public SceneObjectImplementation {
public:
	ActiveAreaTrigger* _this;

public:
	ActiveAreaTriggerServant();
	virtual ~ActiveAreaTriggerServant();

	void _setStub(DistributedObjectStub* stub);
	DistributedObjectStub* _getStub();

};

#endif /*ACTIVEAREATRIGGER_H_*/
