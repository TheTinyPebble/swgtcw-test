/*
 *	server/zone/objects/area/CampActiveArea.h generated by engine3 IDL compiler 0.55
 */

#ifndef CAMPACTIVEAREA_H_
#define CAMPACTIVEAREA_H_

#include "engine/orb/DistributedObjectBroker.h"

class Player;

class ActiveArea;

class CampSite;

#include "ActiveArea.h"

class CampActiveArea : public ActiveArea {
public:
	CampActiveArea(float x, float y, float z, float radius, CampSite* camp);

	void onEnter(Player* player);

	void onExit(Player* player);

protected:
	CampActiveArea(DummyConstructorParameter* param);

	virtual ~CampActiveArea();

	friend class CampActiveAreaHelper;
};

class CampActiveAreaImplementation;

class CampActiveAreaAdapter : public ActiveAreaAdapter {
public:
	CampActiveAreaAdapter(CampActiveAreaImplementation* impl);

	Packet* invokeMethod(sys::uint32 methid, DistributedMethod* method);

	void onEnter(Player* player);

	void onExit(Player* player);

};

class CampActiveAreaHelper : public DistributedObjectClassHelper, public Singleton<CampActiveAreaHelper> {
	static CampActiveAreaHelper* staticInitializer;

public:
	CampActiveAreaHelper();

	void finalizeHelper();

	DistributedObject* instantiateObject();

	DistributedObjectAdapter* createAdapter(DistributedObjectStub* obj);

	friend class SingletonWrapper<CampActiveAreaHelper>;
};

#include "ActiveAreaImplementation.h"

class CampActiveAreaServant : public ActiveAreaImplementation {
public:
	CampActiveArea* _this;

public:
	CampActiveAreaServant(float x, float y, float z, float radius);
	virtual ~CampActiveAreaServant();

	void _setStub(DistributedObjectStub* stub);
	DistributedObjectStub* _getStub();

};

#endif /*CAMPACTIVEAREA_H_*/
