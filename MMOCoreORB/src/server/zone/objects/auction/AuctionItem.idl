/*
Copyright (C) 2007 <SWGEmu>

This File is part of Core3.

This program is free software; you can redistribute
it and/or modify it under the terms of the GNU Lesser
General Public License as published by the Free Software
Foundation; either version 2 of the License,
or (at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
See the GNU Lesser General Public License for
more details.

You should have received a copy of the GNU Lesser General
Public License along with this program; if not, write to
the Free Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA

Linking Engine3 statically or dynamically with other modules
is making a combined work based on Engine3.
Thus, the terms and conditions of the GNU Lesser General Public License
cover the whole combination.

In addition, as a special exception, the copyright holders of Engine3
give you permission to combine Engine3 program with free software
programs or libraries that are released under the GNU LGPL and with
code included in the standard release of Core3 under the GNU LGPL
license (or modified versions of such code, with unchanged license).
You may copy and distribute such a system following the terms of the
GNU LGPL for Engine3 and the licenses of the other code concerned,
provided that you include the source code of that other code when
and as the GNU LGPL requires distribution of source code.

Note that people who make modified versions of Engine3 are not obligated
to grant this special exception for their modified versions;
it is their choice whether to do so. The GNU Lesser General Public License
gives permission to release a modified version without this exception;
this exception also makes it possible to release a modified version
which carries forward this exception.
 */

package server.zone.objects.auction;

import system.util.VectorMap;
import engine.core.ManagedObject;
import server.zone.objects.tangible.terminal.vendor.bazaar.BazaarTerminal;
import server.zone.objects.tangible.terminal.vendor.VendorTerminal;
import system.lang.StringBuffer;

include server.zone.objects.scene.variables.StringId;

class AuctionItem extends ManagedObject {
	
	protected unsigned long vendorID;
	
	protected unsigned long auctionedItemObjectID;
	protected int itemType;

	protected unsigned long ownerID;
	protected string ownerName;
	protected string bidderName;
	protected unsigned long offerToID;

	protected string planet;
	protected string region;
	protected string location;
	protected string terminalTitle;

	protected string itemName;
	protected string itemDescription;

	protected int price;

	protected boolean auction;
	protected boolean sold;
	protected boolean ownerRemove;
	protected boolean inStockroom;
	protected boolean offer;

	protected boolean onBazaar;

	protected unsigned long buyerID;

	protected unsigned int expireTime;
	protected int remainingTime;

	protected boolean updated;

	protected int auctionOptions;

	public final static int OPTION_PREMIUM = 0x400;
	public final static int OPTION_WITHDRAW = 0x800;
	
	public AuctionItem(unsigned long objectid) {
		auctionedItemObjectID = objectid;
		itemType = 0;
		
		ownerID = 0;
		offerToID = 0;
		
		price = 0;
		
		auction = true;
		sold = false;
		ownerRemove = false;
		inStockroom = false;
		offer = false;

		onBazaar = false;
		
		buyerID = 0;
		expireTime = 0;
		remainingTime = 0;
		
		updated = false;

		auctionOptions = 0;
		
		//Logger.setLoggingName("AuctionItem");
	}
	
	public native void setLocation(final string planet, final string header, unsigned long vendorid, int x, int z, boolean vendor);
		
	public void setVendorID(unsigned long val) {
		vendorID = val;
	}		

	public void setItemName(final string name) {
		itemName = name;
	}
	
	public void setItemDescription(final string descr) {
		itemDescription = descr;
	}
	
	public void setPrice(int newPrice) {
		price = newPrice;
	}
	
	public void setAuctionedItemObjectID(unsigned long objectID) {
		auctionedItemObjectID = objectID;
	}
	
	public void setItemType(int type) {
		itemType = type;
	}
	
	public void setOwnerID(unsigned long ownerObjectID) {
		ownerID = ownerObjectID;
	}
	
	public void setOfferToID(unsigned long vendorOwnerID) {
		offerToID = vendorOwnerID;
	}
	
	public void setBidderName(final string name) {
		bidderName = name;
	}
	
	@local
	public void setPlanet(final string planetid) {
		planet = planetid;
	}
	
	public void setOwnerName(final string name) {
		ownerName = name;
	}
	
	public void setAuction(boolean isAuction) {
		auction = isAuction;
	}
	
	public void setSold(boolean isSold) {
		sold = isSold;
	}
	
	public void setRemovedByOwner(boolean isRemovedByOwner) {
		ownerRemove = isRemovedByOwner;
	}

	public void setAuctionPremium() {
		auctionOptions = auctionOptions | OPTION_PREMIUM;
	}

	public void setAuctionWithdraw() {
		auctionOptions = auctionOptions | OPTION_WITHDRAW;
	}
	
	public native void clearAuctionWithdraw();

	public void setInStockroom(boolean inStock) {
		inStockroom = inStock;
	}

	public void setOfferToVendor(boolean val) {
		offer = val;
	}

	public void setOnBazaar(boolean val) {
		onBazaar = val;
	}
	
	public void setExpireTime(int time) {
		expireTime = time;
	}
	
	public void setBuyerID(unsigned long id) {
		buyerID = id;
	}

	public boolean isOnBazaar() {
		return onBazaar;
	}
	
	public boolean isSold() {
		return sold;
	}
	
	public boolean isAuction() {
		return auction;
	}
	
	public boolean isRemovedByOwner() {
		return ownerRemove;
	}

	public boolean isInStockroom() {
		return inStockroom;
	}

	public boolean isOfferToVendor() {
		return offer;
	}
	
	public unsigned long getVendorID() {
		return vendorID;
	}

	public unsigned long getAuctionedItemObjectID() {
		return auctionedItemObjectID;
	}
	
	public unsigned long getOwnerID() {
		return ownerID;
	}
	
	public unsigned long getOfferToID() {
		return offerToID;
	}
	
	public string getTerminalTitle() {
		return terminalTitle;
	}
	
	public string getOwnerName() {
		return ownerName;
	}
	
	public string getItemName() {
		return itemName;
	}
	
	public int getExpireTime() {
		return expireTime;
	}
	
	public int getPrice() {
		return price;
	}
	
	public int getItemType() {
		return itemType;
	}
	
	public unsigned long getBuyerID() {
		return buyerID;
	}
	
	public string getBidderName() {
		return bidderName;
	}
	
	public string getItemDescription() {
		return itemDescription;
	}
	
	public string getLocation() {
		return location;
	}

	public int getAuctionOptions() {
		return auctionOptions;
	}

	public boolean isPremiumAuction() {
		return auctionOptions & OPTION_PREMIUM;
	}

	public boolean isOwner() {
		return auctionOptions & OPTION_WITHDRAW;
	}

}
