/*
 *	server/zone/objects/creature/bluefrog/BlueFrogVector.h generated by engine3 IDL compiler 0.55
 */

#ifndef BLUEFROGVECTOR_H_
#define BLUEFROGVECTOR_H_

#include "engine/orb/DistributedObjectBroker.h"

class BlueFrogVector : public DistributedObjectStub {
public:
	BlueFrogVector();

	unsigned int size();

	void add(String& item);

	String& get(unsigned int index);

protected:
	BlueFrogVector(DummyConstructorParameter* param);

	virtual ~BlueFrogVector();

	String _return_get;

	friend class BlueFrogVectorHelper;
};

class BlueFrogVectorImplementation;

class BlueFrogVectorAdapter : public DistributedObjectAdapter {
public:
	BlueFrogVectorAdapter(BlueFrogVectorImplementation* impl);

	Packet* invokeMethod(sys::uint32 methid, DistributedMethod* method);

	unsigned int size();

	void add(String& item);

	String& get(unsigned int index);

protected:
	String _param0_add__String_;
};

class BlueFrogVectorHelper : public DistributedObjectClassHelper, public Singleton<BlueFrogVectorHelper> {
	static BlueFrogVectorHelper* staticInitializer;

public:
	BlueFrogVectorHelper();

	void finalizeHelper();

	DistributedObject* instantiateObject();

	DistributedObjectAdapter* createAdapter(DistributedObjectStub* obj);

	friend class SingletonWrapper<BlueFrogVectorHelper>;
};

class BlueFrogVectorServant : public DistributedObjectServant {
public:
	BlueFrogVector* _this;

public:
	BlueFrogVectorServant();
	virtual ~BlueFrogVectorServant();

	void _setStub(DistributedObjectStub* stub);
	DistributedObjectStub* _getStub();

};

#endif /*BLUEFROGVECTOR_H_*/
