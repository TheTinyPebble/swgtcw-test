/*
 *	server/zone/objects/creature/aigroup/PackGroup.h generated by engine3 IDL compiler 0.60
 */

#ifndef PACKGROUP_H_
#define PACKGROUP_H_

#include "engine/orb/DistributedObjectBroker.h"

#include "engine/core/ManagedReference.h"

#include "engine/core/ManagedWeakReference.h"

#include "server/zone/objects/creature/aigroup/AiGroup.h"

namespace server {
namespace zone {
namespace objects {
namespace creature {
namespace aigroup {

class PackGroup : public AiGroup {
public:
	PackGroup();

	bool isPackGroup();

	DistributedObjectServant* _getImplementation();

	void _setImplementation(DistributedObjectServant* servant);

protected:
	PackGroup(DummyConstructorParameter* param);

	virtual ~PackGroup();

	friend class PackGroupHelper;
};

} // namespace aigroup
} // namespace creature
} // namespace objects
} // namespace zone
} // namespace server

using namespace server::zone::objects::creature::aigroup;

namespace server {
namespace zone {
namespace objects {
namespace creature {
namespace aigroup {

class PackGroupImplementation : public AiGroupImplementation {

public:
	PackGroupImplementation();

	PackGroupImplementation(DummyConstructorParameter* param);

	bool isPackGroup();

	PackGroup* _this;

	operator const PackGroup*();

	DistributedObjectStub* _getStub();
	virtual void readObject(ObjectInputStream* stream);
	virtual void writeObject(ObjectOutputStream* stream);
protected:
	virtual ~PackGroupImplementation();

	void finalize();

	void _initializeImplementation();

	void _setStub(DistributedObjectStub* stub);

	void lock(bool doLock = true);

	void lock(ManagedObject* obj);

	void rlock(bool doLock = true);

	void wlock(bool doLock = true);

	void wlock(ManagedObject* obj);

	void unlock(bool doLock = true);

	void runlock(bool doLock = true);

	void _serializationHelperMethod();
	bool readObjectMember(ObjectInputStream* stream, const String& name);
	int writeObjectMembers(ObjectOutputStream* stream);

	friend class PackGroup;
};

class PackGroupAdapter : public AiGroupAdapter {
public:
	PackGroupAdapter(PackGroupImplementation* impl);

	Packet* invokeMethod(sys::uint32 methid, DistributedMethod* method);

	bool isPackGroup();

};

class PackGroupHelper : public DistributedObjectClassHelper, public Singleton<PackGroupHelper> {
	static PackGroupHelper* staticInitializer;

public:
	PackGroupHelper();

	void finalizeHelper();

	DistributedObject* instantiateObject();

	DistributedObjectServant* instantiateServant();

	DistributedObjectAdapter* createAdapter(DistributedObjectStub* obj);

	friend class Singleton<PackGroupHelper>;
};

} // namespace aigroup
} // namespace creature
} // namespace objects
} // namespace zone
} // namespace server

using namespace server::zone::objects::creature::aigroup;

#endif /*PACKGROUP_H_*/
