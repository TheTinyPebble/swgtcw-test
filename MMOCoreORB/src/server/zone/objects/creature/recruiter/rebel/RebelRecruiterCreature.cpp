/*
 *	server/zone/objects/creature/recruiter/rebel/RebelRecruiterCreature.cpp generated by engine3 IDL compiler 0.55
 */

#include "RebelRecruiterCreature.h"

#include "RebelRecruiterCreatureImplementation.h"

#include "../RecruiterCreature.h"

/*
 *	RebelRecruiterCreatureStub
 */

RebelRecruiterCreature::RebelRecruiterCreature(unsigned long long oid) : RecruiterCreature(DummyConstructorParameter::instance()) {
	_impl = new RebelRecruiterCreatureImplementation(oid);
	_impl->_setStub(this);
}

RebelRecruiterCreature::RebelRecruiterCreature(DummyConstructorParameter* param) : RecruiterCreature(param) {
}

RebelRecruiterCreature::~RebelRecruiterCreature() {
}

/*
 *	RebelRecruiterCreatureAdapter
 */

RebelRecruiterCreatureAdapter::RebelRecruiterCreatureAdapter(RebelRecruiterCreatureImplementation* obj) : RecruiterCreatureAdapter(obj) {
}

Packet* RebelRecruiterCreatureAdapter::invokeMethod(uint32 methid, DistributedMethod* inv) {
	Packet* resp = new MethodReturnMessage(0);

	switch (methid) {
	default:
		return NULL;
	}

	return resp;
}

/*
 *	RebelRecruiterCreatureHelper
 */

RebelRecruiterCreatureHelper* RebelRecruiterCreatureHelper::staticInitializer = RebelRecruiterCreatureHelper::instance();

RebelRecruiterCreatureHelper::RebelRecruiterCreatureHelper() {
	className = "RebelRecruiterCreature";

	DistributedObjectBroker::instance()->registerClass(className, this);
}

void RebelRecruiterCreatureHelper::finalizeHelper() {
	RebelRecruiterCreatureHelper::finalize();
}

DistributedObject* RebelRecruiterCreatureHelper::instantiateObject() {
	return new RebelRecruiterCreature(DummyConstructorParameter::instance());
}

DistributedObjectAdapter* RebelRecruiterCreatureHelper::createAdapter(DistributedObjectStub* obj) {
	DistributedObjectAdapter* adapter = new RebelRecruiterCreatureAdapter((RebelRecruiterCreatureImplementation*) obj->_getImplementation());

	obj->_setClassName(className);
	obj->_setClassHelper(this);

	adapter->setStub(obj);

	return adapter;
}

/*
 *	RebelRecruiterCreatureServant
 */

RebelRecruiterCreatureServant::RebelRecruiterCreatureServant(unsigned long long oid) : RecruiterCreatureImplementation(oid) {
	_classHelper = RebelRecruiterCreatureHelper::instance();
}

RebelRecruiterCreatureServant::~RebelRecruiterCreatureServant() {
}

void RebelRecruiterCreatureServant::_setStub(DistributedObjectStub* stub) {
	_this = (RebelRecruiterCreature*) stub;
	RecruiterCreatureServant::_setStub(stub);
}

DistributedObjectStub* RebelRecruiterCreatureServant::_getStub() {
	return _this;
}

