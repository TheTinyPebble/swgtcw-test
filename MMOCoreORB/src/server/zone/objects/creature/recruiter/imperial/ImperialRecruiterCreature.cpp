/*
 *	server/zone/objects/creature/recruiter/imperial/ImperialRecruiterCreature.cpp generated by engine3 IDL compiler 0.55
 */

#include "ImperialRecruiterCreature.h"

#include "ImperialRecruiterCreatureImplementation.h"

#include "../RecruiterCreature.h"

/*
 *	ImperialRecruiterCreatureStub
 */

ImperialRecruiterCreature::ImperialRecruiterCreature(unsigned long long oid) : RecruiterCreature(DummyConstructorParameter::instance()) {
	_impl = new ImperialRecruiterCreatureImplementation(oid);
	_impl->_setStub(this);
}

ImperialRecruiterCreature::ImperialRecruiterCreature(DummyConstructorParameter* param) : RecruiterCreature(param) {
}

ImperialRecruiterCreature::~ImperialRecruiterCreature() {
}

/*
 *	ImperialRecruiterCreatureAdapter
 */

ImperialRecruiterCreatureAdapter::ImperialRecruiterCreatureAdapter(ImperialRecruiterCreatureImplementation* obj) : RecruiterCreatureAdapter(obj) {
}

Packet* ImperialRecruiterCreatureAdapter::invokeMethod(uint32 methid, DistributedMethod* inv) {
	Packet* resp = new MethodReturnMessage(0);

	switch (methid) {
	default:
		return NULL;
	}

	return resp;
}

/*
 *	ImperialRecruiterCreatureHelper
 */

ImperialRecruiterCreatureHelper* ImperialRecruiterCreatureHelper::staticInitializer = ImperialRecruiterCreatureHelper::instance();

ImperialRecruiterCreatureHelper::ImperialRecruiterCreatureHelper() {
	className = "ImperialRecruiterCreature";

	DistributedObjectBroker::instance()->registerClass(className, this);
}

void ImperialRecruiterCreatureHelper::finalizeHelper() {
	ImperialRecruiterCreatureHelper::finalize();
}

DistributedObject* ImperialRecruiterCreatureHelper::instantiateObject() {
	return new ImperialRecruiterCreature(DummyConstructorParameter::instance());
}

DistributedObjectAdapter* ImperialRecruiterCreatureHelper::createAdapter(DistributedObjectStub* obj) {
	DistributedObjectAdapter* adapter = new ImperialRecruiterCreatureAdapter((ImperialRecruiterCreatureImplementation*) obj->_getImplementation());

	obj->_setClassName(className);
	obj->_setClassHelper(this);

	adapter->setStub(obj);

	return adapter;
}

/*
 *	ImperialRecruiterCreatureServant
 */

ImperialRecruiterCreatureServant::ImperialRecruiterCreatureServant(unsigned long long oid) : RecruiterCreatureImplementation(oid) {
	_classHelper = ImperialRecruiterCreatureHelper::instance();
}

ImperialRecruiterCreatureServant::~ImperialRecruiterCreatureServant() {
}

void ImperialRecruiterCreatureServant::_setStub(DistributedObjectStub* stub) {
	_this = (ImperialRecruiterCreature*) stub;
	RecruiterCreatureServant::_setStub(stub);
}

DistributedObjectStub* ImperialRecruiterCreatureServant::_getStub() {
	return _this;
}

