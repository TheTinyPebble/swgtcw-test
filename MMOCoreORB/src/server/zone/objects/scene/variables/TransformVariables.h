/*
 *	server/zone/objects/scene/variables/TransformVariables.h generated by engine3 IDL compiler 0.55
 */

#ifndef TRANSFORMVARIABLES_H_
#define TRANSFORMVARIABLES_H_

#include "engine/orb/DistributedObjectBroker.h"

#include "engine/core/ManagedObject.h"

class TransformVariables : public ManagedObject {
public:
	TransformVariables();

	void setDirectionAngle(unsigned char angle);

	void setMovementCounter(unsigned int counter);

	void setMovementStamp(unsigned int stamp);

	void setDirection(float x, float z, float y, float w);

	unsigned int getMovementCounter();

	float getPositionX();

	float getPositionZ();

	float getPositionY();

	float getPreviousPositionX();

	float getPreviousPositionZ();

	float getPreviousPositionY();

	int getDirectionAngle();

	void initializePosition(float x, float z, float y);

	float getDirectionX();

	float getDirectionZ();

	float getDirectionY();

	float getDirectionW();

protected:
	TransformVariables(DummyConstructorParameter* param);

	virtual ~TransformVariables();

	friend class TransformVariablesHelper;
};

class TransformVariablesImplementation;

class TransformVariablesAdapter : public ManagedObjectAdapter {
public:
	TransformVariablesAdapter(TransformVariablesImplementation* impl);

	Packet* invokeMethod(sys::uint32 methid, DistributedMethod* method);

	void setDirectionAngle(unsigned char angle);

	void setMovementCounter(unsigned int counter);

	void setMovementStamp(unsigned int stamp);

	void setDirection(float x, float z, float y, float w);

	unsigned int getMovementCounter();

	float getPositionX();

	float getPositionZ();

	float getPositionY();

	float getPreviousPositionX();

	float getPreviousPositionZ();

	float getPreviousPositionY();

	int getDirectionAngle();

	void initializePosition(float x, float z, float y);

	float getDirectionX();

	float getDirectionZ();

	float getDirectionY();

	float getDirectionW();

};

class TransformVariablesHelper : public DistributedObjectClassHelper, public Singleton<TransformVariablesHelper> {
	static TransformVariablesHelper* staticInitializer;

public:
	TransformVariablesHelper();

	void finalizeHelper();

	DistributedObject* instantiateObject();

	DistributedObjectAdapter* createAdapter(DistributedObjectStub* obj);

	friend class SingletonWrapper<TransformVariablesHelper>;
};

#include "engine/core/ManagedObjectImplementation.h"

class TransformVariablesServant : public ManagedObjectImplementation {
public:
	TransformVariables* _this;

public:
	TransformVariablesServant();
	virtual ~TransformVariablesServant();

	void _setStub(DistributedObjectStub* stub);
	DistributedObjectStub* _getStub();

};

#endif /*TRANSFORMVARIABLES_H_*/
