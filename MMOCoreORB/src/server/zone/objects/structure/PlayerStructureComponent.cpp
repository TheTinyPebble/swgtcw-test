/*
 *	server/zone/objects/structure/PlayerStructureComponent.cpp generated by engine3 IDL compiler 0.60
 */

#include "PlayerStructureComponent.h"

/*
 *	PlayerStructureComponentStub
 */

enum {};

PlayerStructureComponent::PlayerStructureComponent() : ManagedObject(DummyConstructorParameter::instance()) {
	PlayerStructureComponentImplementation* _implementation = new PlayerStructureComponentImplementation();
	_impl = _implementation;
	_impl->_setStub(this);
}

PlayerStructureComponent::PlayerStructureComponent(DummyConstructorParameter* param) : ManagedObject(param) {
}

PlayerStructureComponent::~PlayerStructureComponent() {
}


DistributedObjectServant* PlayerStructureComponent::_getImplementation() {

	_updated = true;
	return _impl;
}

void PlayerStructureComponent::_setImplementation(DistributedObjectServant* servant) {
	_impl = servant;
}

/*
 *	PlayerStructureComponentImplementation
 */

PlayerStructureComponentImplementation::PlayerStructureComponentImplementation(DummyConstructorParameter* param) : ManagedObjectImplementation(param) {
	_initializeImplementation();
}


PlayerStructureComponentImplementation::~PlayerStructureComponentImplementation() {
}


void PlayerStructureComponentImplementation::finalize() {
}

void PlayerStructureComponentImplementation::_initializeImplementation() {
	_setClassHelper(PlayerStructureComponentHelper::instance());

	_serializationHelperMethod();
	_serializationHelperMethod();
}

void PlayerStructureComponentImplementation::_setStub(DistributedObjectStub* stub) {
	_this = (PlayerStructureComponent*) stub;
	ManagedObjectImplementation::_setStub(stub);
}

DistributedObjectStub* PlayerStructureComponentImplementation::_getStub() {
	return _this;
}

PlayerStructureComponentImplementation::operator const PlayerStructureComponent*() {
	return _this;
}

void PlayerStructureComponentImplementation::lock(bool doLock) {
	_this->lock(doLock);
}

void PlayerStructureComponentImplementation::lock(ManagedObject* obj) {
	_this->lock(obj);
}

void PlayerStructureComponentImplementation::rlock(bool doLock) {
	_this->rlock(doLock);
}

void PlayerStructureComponentImplementation::wlock(bool doLock) {
	_this->wlock(doLock);
}

void PlayerStructureComponentImplementation::wlock(ManagedObject* obj) {
	_this->wlock(obj);
}

void PlayerStructureComponentImplementation::unlock(bool doLock) {
	_this->unlock(doLock);
}

void PlayerStructureComponentImplementation::runlock(bool doLock) {
	_this->runlock(doLock);
}

void PlayerStructureComponentImplementation::_serializationHelperMethod() {
	ManagedObjectImplementation::_serializationHelperMethod();

	_setClassName("PlayerStructureComponent");

}

void PlayerStructureComponentImplementation::readObject(ObjectInputStream* stream) {
	uint16 _varCount = stream->readShort();
	for (int i = 0; i < _varCount; ++i) {
		String _name;
		_name.parseFromBinaryStream(stream);

		uint16 _varSize = stream->readShort();

		int _currentOffset = stream->getOffset();

		if(PlayerStructureComponentImplementation::readObjectMember(stream, _name)) {
		}

		stream->setOffset(_currentOffset + _varSize);
	}

	initializeTransientMembers();
}

bool PlayerStructureComponentImplementation::readObjectMember(ObjectInputStream* stream, const String& _name) {
	if (ManagedObjectImplementation::readObjectMember(stream, _name))
		return true;


	return false;
}

void PlayerStructureComponentImplementation::writeObject(ObjectOutputStream* stream) {
	int _currentOffset = stream->getOffset();
	stream->writeShort(0);
	int _varCount = PlayerStructureComponentImplementation::writeObjectMembers(stream);
	stream->writeShort(_currentOffset, _varCount);
}

int PlayerStructureComponentImplementation::writeObjectMembers(ObjectOutputStream* stream) {
	String _name;
	int _offset;
	uint16 _totalSize;

	return 0 + ManagedObjectImplementation::writeObjectMembers(stream);
}

/*
 *	PlayerStructureComponentAdapter
 */

PlayerStructureComponentAdapter::PlayerStructureComponentAdapter(PlayerStructureComponentImplementation* obj) : ManagedObjectAdapter(obj) {
}

Packet* PlayerStructureComponentAdapter::invokeMethod(uint32 methid, DistributedMethod* inv) {
	Packet* resp = new MethodReturnMessage(0);

	switch (methid) {
	default:
		return NULL;
	}

	return resp;
}

/*
 *	PlayerStructureComponentHelper
 */

PlayerStructureComponentHelper* PlayerStructureComponentHelper::staticInitializer = PlayerStructureComponentHelper::instance();

PlayerStructureComponentHelper::PlayerStructureComponentHelper() {
	className = "PlayerStructureComponent";

	Core::getObjectBroker()->registerClass(className, this);
}

void PlayerStructureComponentHelper::finalizeHelper() {
	PlayerStructureComponentHelper::finalize();
}

DistributedObject* PlayerStructureComponentHelper::instantiateObject() {
	return new PlayerStructureComponent(DummyConstructorParameter::instance());
}

DistributedObjectServant* PlayerStructureComponentHelper::instantiateServant() {
	return new PlayerStructureComponentImplementation(DummyConstructorParameter::instance());
}

DistributedObjectAdapter* PlayerStructureComponentHelper::createAdapter(DistributedObjectStub* obj) {
	DistributedObjectAdapter* adapter = new PlayerStructureComponentAdapter((PlayerStructureComponentImplementation*) obj->_getImplementation());

	obj->_setClassName(className);
	obj->_setClassHelper(this);

	adapter->setStub(obj);

	return adapter;
}

